<div class="sellpoint">

    <div class="collocation">

        {% assign str = 't11861820ns,sp211119ulk5,sp211123o0ye,sp211127937h' %}
        {% assign handles = str | split:',' %}

        
        
        <ul class="collocation-list">

            {% for handle in handles %}
            {%- assign product = all_products[handle] -%}
            {%- assign selected_variant = product.selected_or_first_available_variant -%}

            <li class="collocation-list-item" style="left:{{- forloop.index0 |times:100 -}}%;">

                {%- comment -%}
                {%- endcomment -%}
                {%- render 'collocation-purchase-card' product:product , selected_variant:selected_variant,handle:handle index:forloop.index -%}
            </li>

            {%- endfor -%}
        </ul>
        <div class="switch-product">
            <span class="prevButton">{%- render :'icon', icon:'arrow-left' -%}</span>
            <span class="nextButton">{%- render :'icon', icon:'arrow-right' -%}</span>
        </div>
        {%- comment -%}点{%- endcomment -%}
        <div class="scroll-dot">
            {% for Num in handles %}
            <li></li>
            {% endfor %}
        </div>
    </div>
</div>

<script>
    ~function () {
        let scorllNum = {{ handles.size }}  //商品件数
    let collocationList = document.querySelector('.collocation-list')    //ul
    let collocationListItem = document.querySelector('.collocation-list-item')  //li
    let activeIndex = 0;//当前活跃index
    let firstLi = collocationList.firstElementChild //首尾节点
    let lastLi = collocationList.lastElementChild
    let scrollDot = document.querySelector(".scroll-dot")//小点
    //给所有小点添加index
    var lis = scrollDot.getElementsByTagName("li")
    for (i = 0; i < lis.length; i++) {
        lis[i].index = i
        lis[i].addEventListener("click", changeItem)
    }
    lis[activeIndex].className = "scroll-dot__active-li"

    var animationsflag = true //是否阻止动画
    document.querySelector('.prevButton').addEventListener("click", prevItem)
    document.querySelector('.nextButton').addEventListener("click", nextItem)

    //监听动画开始和结束
    collocationList.addEventListener("animationstart", animationStart)
    collocationList.addEventListener("transitionstart", animationStart)
    collocationList.addEventListener("animationend", animationEnd)
    collocationList.addEventListener("transitionend", animationEnd)

    function animationStart() {
        animationsflag = false
    }
    function animationEnd() {
        animationsflag = true
    }
    //添加上一个item的动画
    const prevkeyframes = `
    @keyframes prevItem1{
            0% { transform:  translate(-${scorllNum * 100}% ,0);  }
            100% { transform:  translate(-${(scorllNum - 1) * 100}%,0);}
        }
        @keyframes prevItem2{
            0% { transform:  translate(-${scorllNum * 100}% ,0);  }
            100% { transform:  translate(-${(scorllNum - 1) * 100}%,0);}
        }
    `
    const style = document.createElement("style");
    style.type = "text/css";
    style.innerHTML = prevkeyframes;
    document.getElementsByTagName('head')[0].appendChild(style)

    function changeItem() {
        if (animationsflag) {
            activeIndex = this.index
            for (i = 0; i < lis.length; i++) {
                lis[i].className = ""
            }
            lis[activeIndex].className = "scroll-dot__active-li"
            firstLi.style.left = "0%"
            lastLi.style.left = (scorllNum - 1) * 100 + "%"
            collocationList.style.transform = `translate( -${activeIndex * 100}% , 0px )`;
        }
    }

    function prevItem() {
        if (animationsflag) {
            if (activeIndex == 0) {
                activeIndex = scorllNum - 1
                lastLi.style.left = (scorllNum - 1) * 100 + "%"
                firstLi.style.left = scorllNum * 100 + "%"

                if (collocationList.className == "collocation-list prevItem1") {
                    collocationList.className = "collocation-list prevItem2"
                } else {
                    collocationList.className = "collocation-list prevItem1"
                }

            } else {
                activeIndex -= 1
                firstLi.style.left = "0%"
                lastLi.style.left = (scorllNum - 1) * 100 + "%"
            }
            collocationList.style.transform = `translate( -${activeIndex * 100}% , 0px )`;
        }
    }
    function nextItem() {
        if (animationsflag) {
            if (activeIndex == scorllNum - 1) {
                activeIndex = 0
                firstLi.style.left = "0%"
                lastLi.style.left = "-100%"

                if (collocationList.className == "collocation-list nextItem1") {
                    collocationList.className = "collocation-list nextItem2"
                } else {
                    collocationList.className = "collocation-list nextItem1"
                }

            } else {
                activeIndex += 1
                firstLi.style.left = "0%"
                lastLi.style.left = (scorllNum - 1) * 100 + "%"
            }
            collocationList.style.transform = `translate( -${activeIndex * 100}% , 0px )`;
        }
    }
  }();

</script>
<style>
    .switch-product {
        display: flex;
        justify-content: space-between;
    }

    .switch-product span {
        cursor: pointer;
        font-size: 20px;
    }

   
    .product-form__payment-container {
        border: none;
    }


</style>