<script>

if ({{ request.page_type | json }} == 'collection') {/*集合页*/
let addQuickView=new sadhus_shence({
   container:"body",
   type:"addCart",
   sendType:"AddToCart", 
   setSessionId:"sensorsCheckout",
   customData: function(container,el){/*形参为当前容器dom */
      let newData={};
      if(!{{product.metafields.my_fields.category | json}} ){
      newData.first_commodity=""
		newData.second_commodity=""
		newData.third_commodity= ""
      } else{
      const category = {{product.metafields.my_fields.category}}
 	   newData.first_commodity=category.first_commodity
		newData.second_commodity=category.second_commodity
		newData.third_commodity= category.third_commodity
      }
      const value= document.querySelector('.quantity-selector--product .quantity-selector__value').value
      newData.commodity_quantity=value
      let data =  el.getAttribute('data-scdata')
      data=JSON.parse(data)
      newData.compliment_commodities=data.compliment_commodities.split(',')
      newData.commodity_tag=data.commodity_tag.split(',')
      const valueSelected=document.querySelector('.select-wrapper option[selected]')
      let id = ""
      if(valueSelected){
         id =  valueSelected.getAttribute('data-sku') || ""
      }
      const colorChecked=document.querySelector('.ld-variant-list')
      const sizeChecked=document.querySelector('.block-swatch-list')
      newData.commodity_color=colorChecked?colorChecked.previousElementSibling.querySelector('.product-form__selected-value').innerText : ""
      newData.commodity_size=sizeChecked?sizeChecked.previousElementSibling.querySelector('.product-form__selected-value').innerText : ""
      if(colorChecked){
         newData.commodity_description_image=document.querySelector('.product-gallery__image.lazyloaded').getAttribute('data-zoom').split('?')[0]
      }
      newData.commodity_skuid=id
     return newData  /*返回值必须为{}*/
   },
   callback:function(){
       sensors.setProfile({last_addtocart_time:getFormatDate()})
     addQuickView.updateFn();
   }
})
new sadhus_shence({
   delayed:true,
   container:".product-list.product-list--collection",
   type:"quickView",
   event:'click',
   sendType:"CommodityDetail", 
   customData: function(container,el){/*形参为当前容器dom */
      let newData={};
           if(!{{product.metafields.my_fields.category | json}} ){
      newData.first_commodity=""
		newData.second_commodity=""
		newData.third_commodity= ""
      } else{
      const category = {{product.metafields.my_fields.category| json}}
 	   newData.first_commodity=category.first_commodity
		newData.second_commodity=category.second_commodity
		newData.third_commodity= category.third_commodity
      }
      let data = el.getAttribute('data-scdata')
      data=JSON.parse(data)
      newData.commodity_tag=data.commodity_tag.split(',')
      return newData  /*返回值必须为{}*/
   }
})



new sadhus_shence({
      delayed:true,
   container:"body",
   type:"valueChange",
   event:'click',
   sendType:"CommodityDetail", 
   customData: function(container,el){/*形参为当前容器dom */
      let newData={};
      if(!{{product.metafields.my_fields.category | json}} ){
      newData.first_commodity=""
		newData.second_commodity=""
		newData.third_commodity= ""
      } else{
      const category = {{product.metafields.my_fields.category}}
 	   newData.first_commodity=category.first_commodity
		newData.second_commodity=category.second_commodity
		newData.third_commodity= category.third_commodity
      }
      let data = el.getAttribute('data-scdata')
      data=JSON.parse(data)
      const valueSelected=document.querySelector('.select-wrapper option[selected]')
      let id = ""
      if(valueSelected){
         id =  valueSelected.getAttribute('data-sku') || ""
      }
      const colorChecked=document.querySelector('.ld-variant-list')
      const sizeChecked=document.querySelector('.block-swatch-list')
      newData.commodity_color=colorChecked?colorChecked.previousElementSibling.querySelector('.product-form__selected-value').innerText : ""
      newData.commodity_size=sizeChecked?sizeChecked.previousElementSibling.querySelector('.product-form__selected-value').innerText : ""
      if(colorChecked){
         newData.commodity_description_image=document.querySelector('.product-gallery__image.lazyloaded').getAttribute('data-zoom').split('?')[0]
      }
      newData.commodity_skuid=id
      newData.commodity_tag=data.commodity_tag.split(',')
      return newData  /*返回值必须为{}*/
   },

})

}

if ({{ request.page_type | json }} == 'product') {/*产品页*/
   document.querySelector('.ld-variant-list')
   if( document.querySelector('.ld-variant-list')){
      new sadhus_shence({
   delayed:true,
   container:".ld-variant-list",
   type:"valueChange",
   event:'click',
   sendType:"CommodityDetail", 
   customData:function (container,el){/*形参为当前容器dom */
      let newData={};
      if(!{{product.metafields.my_fields.category | json}} ){
      newData.first_commodity=""
		newData.second_commodity=""
		newData.third_commodity= ""
      } else{
      const category = {{product.metafields.my_fields.category}}
 	   newData.first_commodity=category.first_commodity
		newData.second_commodity=category.second_commodity
		newData.third_commodity= category.third_commodity
      }

      let data =  el.getAttribute('data-scdata')
      data=JSON.parse(data)
      const valueSelected=document.querySelector('.select-wrapper option[selected]')
      let id = ""
      if(valueSelected){
         id =  valueSelected.getAttribute('data-sku') || ""
      }
      const colorChecked=document.querySelector('.ld-variant-list')
      const sizeChecked=document.querySelector('.block-swatch-list')
      newData.commodity_color=colorChecked?colorChecked.previousElementSibling.querySelector('.product-form__selected-value').innerText : ""
      newData.commodity_size=sizeChecked?sizeChecked.previousElementSibling.querySelector('.product-form__selected-value').innerText : ""
      if(colorChecked){
         newData.commodity_description_image=el.querySelector('.aspect-ratio img').src
      }
      newData.commodity_skuid=id
      newData.commodity_tag=data.commodity_tag.split(',')
      return newData  /*返回值必须为{}*/
   },
})
   }
 
    
new sadhus_shence({
   container:".shenceDetail",
   event:'load',
   sendType:"CommodityDetail", 
   customData: function(container,el){/*形参为当前容器dom */
      let newData={};
      if(!{{product.metafields.my_fields.category | json}} ){
      newData.first_commodity=""
		newData.second_commodity=""
		newData.third_commodity= ""
      } else{
      const category = {{product.metafields.my_fields.category}}
 	   newData.first_commodity=category.first_commodity
		newData.second_commodity=category.second_commodity
		newData.third_commodity= category.third_commodity
      }
      let data=  el.getAttribute('data-scdata')
      data=JSON.parse(data)
      newData.commodity_tag=data.commodity_tag.split(',')
      const valueSelected=document.querySelector('.select-wrapper option[selected]')
      let id = ""
      if(valueSelected){
         id =  valueSelected.getAttribute('data-sku') || ""
      }
      const colorChecked=document.querySelector('.ld-variant input[checked]')
      const sizeChecked=document.querySelector('.block-swatch input[checked]')
      newData.commodity_color=colorChecked?colorChecked.value : ""
      newData.commodity_size=sizeChecked?sizeChecked.value : ""
      if(colorChecked){
         newData.commodity_description_image=document.querySelector('.product-gallery__image.lazyloaded').getAttribute('data-zoom').split('?')[0]
      }
      newData.site_category = getSiteCategory()
      return newData  /*返回值必须为{}*/
   }
})

let addCart=new sadhus_shence({
   delayed:true,
   container:".product-form",
   event:"click",
   type:"addCart",
   sendType:"AddToCart", 
   customData: function(container,el){/*形参为当前容器dom */
      let newData={};
      if(!{{product.metafields.my_fields.category | json}} ){
      newData.first_commodity=""
		newData.second_commodity=""
		newData.third_commodity= ""
      } else{
      const category = {{product.metafields.my_fields.category}}
 	   newData.first_commodity=category.first_commodity
		newData.second_commodity=category.second_commodity
		newData.third_commodity= category.third_commodity
      }
      const value= document.querySelector('.quantity-selector--product .quantity-selector__value').value
      newData.commodity_quantity=value
       let data =  el.getAttribute('data-scdata')
      data=JSON.parse(data)
      newData.compliment_commodities=data.compliment_commodities.split(',')
      newData.commodity_tag=data.commodity_tag.split(',')
      const valueSelected=document.querySelector('.select-wrapper option[selected]')
      let id = ""
      if(valueSelected){
         id =  valueSelected.getAttribute('data-sku') || ""
      }
      const colorChecked=document.querySelector('.ld-variant-list')
      const sizeChecked=document.querySelector('.block-swatch-list')
      newData.commodity_color=colorChecked?colorChecked.previousElementSibling.querySelector('.product-form__selected-value').innerText : ""
      newData.commodity_size=sizeChecked?sizeChecked.previousElementSibling.querySelector('.product-form__selected-value').innerText : ""
      if(colorChecked){
         newData.commodity_description_image=document.querySelector('.product-gallery__image.lazyloaded').getAttribute('data-zoom').split('?')[0]
      }
      newData.commodity_skuid=id
      newData.site_category = getSiteCategory()
     return newData  /*返回值必须为{}*/
   },
   callback:function(){
       sensors.setProfile({last_addtocart_time:getFormatDate()})
     addCart.updateFn();
   }
})
}

new sadhus_shence({
   delayed:true,
   container:"body",
   type:"addMinCart",
   event:'click',
   sendType:"AddToCart", 
   userTabel:{last_addtocart_time:getFormatDate()},
   customData: function(container,el){/*形参为当前容器dom */
     let newData={};
      if(!{{product.metafields.my_fields.category | json}} ){
      newData.first_commodity=""
		newData.second_commodity=""
		newData.third_commodity= ""
      } else{
      const category = {{product.metafields.my_fields.category}}
 	   newData.first_commodity=category.first_commodity
		newData.second_commodity=category.second_commodity
		newData.third_commodity= category.third_commodity    
      }
      let data=el.getAttribute('data-scdata')
      data=JSON.parse(data)
      newData.compliment_commodities=data.compliment_commodities.split(',')
      newData.commodity_tag=data.commodity_tag.split(',')
      newData.site_category = getSiteCategory()
      return newData  /*返回值必须为{}*/
   }
})

new sadhus_shence({
   delayed:true,
   container:"body",
   type:"minusMinCart",
   event:'click',
   sendType:"RemoveFromCart", 
   customData: function(container){/*形参为当前容器dom */
     let newData={};
      if(!{{product.metafields.my_fields.category | json}} ){
      newData.first_commodity=""
		newData.second_commodity=""
		newData.third_commodity= ""
      } else{
      const category = {{product.metafields.my_fields.category}}
 	   newData.first_commodity=category.first_commodity
		newData.second_commodity=category.second_commodity
		newData.third_commodity= category.third_commodity
      }
      let data=  container.querySelector('.quantity-selector__button').getAttribute('data-scdata')
      data=JSON.parse(data)
      newData.compliment_commodities=data.compliment_commodities.split(',')
      newData.commodity_tag=data.commodity_tag.split(',')
      newData.site_category = getSiteCategory()
      return newData  /*返回值必须为{}*/
   }
})

new sadhus_shence({
   delayed:true,
   container:"body",
   type:"removeMinCart",
   event:'click',
   sendType:"RemoveFromCart", 
   customData: function(container){/*形参为当前容器dom */
     let newData={};
      if(!{{product.metafields.my_fields.category | json}} ){
      newData.first_commodity=""
		newData.second_commodity=""
		newData.third_commodity= ""
      } else{
      const category = {{product.metafields.my_fields.category}}
 	   newData.first_commodity=category.first_commodity
		newData.second_commodity=category.second_commodity
		newData.third_commodity= category.third_commodity
      }
      let data = container.querySelector('.ld-link-item').getAttribute('data-scdata')
      data=JSON.parse(data)
      newData.compliment_commodities=data.compliment_commodities.split(',')
      newData.commodity_tag=data.commodity_tag.split(',')
      newData.site_category = getSiteCategory()
      return newData  /*返回值必须为{}*/
   }
})

if ({{ request.page_type | json }} == 'cart') {/*购物车页*/
new sadhus_shence({
      delayed:true,
   container:"body",
   type:"addMainCart",
   event:'click',
   sendType:"AddToCart", 
   userTabel:{last_addtocart_time:getFormatDate()},
   customData: function(container){/*形参为当前容器dom */
     let newData={};
      if(!{{product.metafields.my_fields.category | json}} ){
      newData.first_commodity=""
		newData.second_commodity=""
		newData.third_commodity= ""
      } else{
      const category = {{product.metafields.my_fields.category}}
 	   newData.first_commodity=category.first_commodity
		newData.second_commodity=category.second_commodity
		newData.third_commodity= category.third_commodity
      }
      let data=  container.querySelector('.addCart').getAttribute('data-scdata')
      data=JSON.parse(data)
      newData.compliment_commodities=data.compliment_commodities.split(',')
      newData.commodity_tag=data.commodity_tag.split(',')
      newData.site_category = getSiteCategory()
      return newData  /*返回值必须为{}*/
   }
})

new sadhus_shence({
      delayed:true,
   container:"body",
   type:"minusMainCart",
   event:'click',
   sendType:"RemoveFromCart", 
   customData: function(container){/*形参为当前容器dom */
     let newData={};
      if(!{{product.metafields.my_fields.category | json}} ){
      newData.first_commodity=""
		newData.second_commodity=""
		newData.third_commodity= ""
      } else{
      const category = {{product.metafields.my_fields.category}}
 	   newData.first_commodity=category.first_commodity
		newData.second_commodity=category.second_commodity
		newData.third_commodity= category.third_commodity
      }
      let data=  container.querySelector('.removeCart').getAttribute('data-scdata')
      data=JSON.parse(data)
      newData.compliment_commodities=data.compliment_commodities.split(',')
      newData.commodity_tag=data.commodity_tag.split(',')
      newData.site_category = getSiteCategory()
      return newData  /*返回值必须为{}*/
   }
})

new sadhus_shence({
   delayed:true,
   container:"body",
   type:"removeMainCart",
   event:'click',
   sendType:"RemoveFromCart", 
   customData: function(container){/*形参为当前容器dom */
     let newData={};
      if(!{{product.metafields.my_fields.category | json}} ){
      newData.first_commodity=""
		newData.second_commodity=""
		newData.third_commodity= ""
      } else{
      const category = {{product.metafields.my_fields.category}}
 	   newData.first_commodity=category.first_commodity
		newData.second_commodity=category.second_commodity
		newData.third_commodity= category.third_commodity
      }
      let data=  container.querySelector('.ld-link-item').getAttribute('data-scdata')
      data=JSON.parse(data)
      newData.compliment_commodities=data.compliment_commodities.split(',')
      newData.commodity_tag=data.commodity_tag.split(',')
      newData.site_category = getSiteCategory()
      return newData  /*返回值必须为{}*/
   }
})

}


/*@Author   苦行僧|2022/1/4*/
/*点击预测搜索产品-上报当前点击产品信息*/
new sadhus_shence({
  container: ".header__search-bar-wrapper",
  type: "SearchResultClick",
  customData: function(container){
    let newData={};
    let sel=container.querySelector("#search-product-type");
    newData.key_word= container.querySelector(".search-bar__input ").value;
    newData.key_word_classification=sel.options[sel.selectedIndex].value;
    if(newData.key_word_classification===""){newData.key_word_classification="All categories"}
    newData.search_type="点击自动联想内容";
    newData.currency_unit="USD";
    newData.result_page="";
    return newData
  },
  callback:function (){
    sensors.setProfile({ last_search_time: getFormatDate() });
  }
});
/*点击预测搜索产品-上报当前所有搜索结果*/
new sadhus_shence({
  container: ".header__search-bar-wrapper",
  typeName:"sctypepros",
  dataName: "scdatapros",
  enableName:'scenablepros',
  type: "SearchRequest",
  customData:function (container) {
    let newData={};
    let sel=container.querySelector("#search-product-type");
    newData.key_word= container.querySelector(".search-bar__input ").value;
    newData.key_word_classification=sel.options[sel.selectedIndex].value;
    if(newData.key_word_classification===""){newData.key_word_classification="All categories"}
    newData.search_type="自动联想";
    let listStr=container.querySelector("[data-skulist]").dataset.skulist;
    let listArr=listStr.split(',');
    listArr.pop();
    newData.commodity_skuid_list=listArr;
    return newData
  }
});
/*点击搜索按钮和viewall-记录session*/
new sadhus_shence({
  container:".header__search-bar-wrapper",
  type:"searchjump",
  setSessionId:"sensorsSearchRequesth",
  customSession:function(container){
    let newData={};
    let sel=container.querySelector("#search-product-type");
    newData.key_word= container.querySelector(".search-bar__input ").value;
    newData.key_word_classification=sel.options[sel.selectedIndex].value;
    if(newData.key_word_classification===""){newData.key_word_classification="All categories"}
    return newData;
  },
  callback:function (){
    sensors.setProfile({ last_search_time: getFormatDate() });
  }
});
/*搜索结果页面*/
{%- if request.page_type =="search" -%}
/*打开-默认上报-删除session，转存session用于点击上报*/
new sadhus_shence({
  event:"load",
	debug:true,
  container:".page__content .collection",
  type:"SearchRequest",
  getSessionId:"sensorsSearchRequesth",
  setSessionId: "sensorsSearchResultClick",
  delSession:true,
  customSession:function (container) {
    let newData={};
    newData=JSON.parse(sessionStorage.getItem('sensorsSearchRequesth'));
    return newData;
  },
	customData:function (el) {
    let newData={};
    const data=el.dataset.scdata;
    let scdata=JSON.parse(data);
    let listArr=scdata.commodity_skuid_list.split(',');
    listArr.pop();
    newData.commodity_skuid_list=listArr
    return newData;
  }
});
/*点击产品-上报产品信息*/
new sadhus_shence({
  container:".page__content .collection__dynamic-part",
  type:"SearchResultClick",
  getSessionId: "sensorsSearchResultClick",
  customData: function(container){
    let newData={};
    let sel=container.querySelector("#search-product-type");
    newData.currency_unit="USD";
    newData.result_number=container.querySelector(".product-list--collection").dataset.resultnumber;
    newData.result_page=container.querySelector(".sadhus_agination").dataset.resultpage;
    let session=sessionStorage.getItem('sensorsSearchResultClick');
    session=JSON.parse(session);
    Object.assign(newData,session)
    return newData
  }
});
/*点击搜索按钮-记录session*/
let clickSearch= new sadhus_shence({
  container:".form__connected-item",
  type:"searchjump",
  setSessionId:"sensorsSearchRequesth",
  customSession:function(container){
    let newData={};
    let sel=container.querySelector("#search-product-type");
    newData.key_word= container.querySelector("#search ").value;
    newData.key_word_classification='All categories';
    return newData;
  },
  callback:function (){
    clickSearch.updateFn();
    sensors.setProfile({ last_search_time: getFormatDate() });
  }
});
{%- endif -%}


</script>