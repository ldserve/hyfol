<style>
	.pagination__prev,
	.pagination__next,
	.pagination__nav-item {
		color: #000;
	}

	.my-profile__view {
		text-align: center;
		display: grid;
		grid: repeat(1, auto) / auto-flow auto;
		color: #fff;
		background: url('https://cdn.shopify.com/s/files/1/0595/0691/7535/files/coup.jpg?v=1664507060') no-repeat 100% 100%;
		grid-template-columns: 50% 1px auto;
		padding: 1rem 2rem;

	}

	.profile-total,
	.profile-expire {
		padding: 1rem 0;
	}

	.my_coupons {
		padding: 1rem 3rem;
	}

	.my_coupons__title {
		text-align: center;
	}

	.coupons-nav>summary {
		margin-right: 1.8rem;
		cursor: pointer;
	}

	summary[aria-expanded="true"] {
		border-bottom: 1px solid #000;
	}

	.vip-level__s1,
	.vip-level__s2,
	.vip-level__s3 {
		position: relative;
	}

	.vip-level__s1::after {
		content: 'Silver';
		position: absolute;
		left: -0.2rem;
		bottom: -1.6rem;
	}

	.vip-level__s2::after {
		content: 'Gold';
		position: absolute;
		left: -0.2rem;
		bottom: -1.6rem;
	}

	.vip-level__s3::after {
		content: 'Platinum';
		position: absolute;
		left: -0.8rem;
		bottom: -1.6rem;
	}

	.page__item .my-coupons {
		padding: 0 0rem 3rem;

	}


	.product-item__info {
		background-color: #ffffff;
	}

	.product-item_text,
	.product-item__info-inner .price {
		color: #000000;
	}

	.product-item__swatch-list {
		padding-bottom: 0px;
		min-height: 50px;
	}

	.scroller__inner .price--compare,
	.product-item__info-inner .price--compare {
		text-decoration: line-through black;
	}

	.mobile-account__title {
		text-align: center;
		font-weight: 600;
	}

	.hidden-lap-and-up.account {
		margin: 1rem 0;
	}

	.container.container--flush {
		padding: 0;
	}

	#shopify-section-footer {
		display: none;
	}

	body {
		min-height: 100vh;
		background: #fff;
	}

	main ul,
	li {
		list-style: none;
		padding: 0;
		margin: 0;
	}

	.header-me {
		background-color: #eee;
		padding: 0 10px;
	}

	.header-me .logged .name {
		font-family: var(--heading-font-family);
		font-weight: var(--heading-font-weight);
		font-style: var(--heading-font-style);
	}

	.header-me .logged .tab label {
		cursor: pointer;
	}

	.header-me .logged .hi {
		color: var(--link-color);
	}

	.header-me .account-box {
		padding: 1rem 0;

	}

	.header-me .logged>.tab {
		transition: all 0.4s ease;
	}

	#account-input:checked~.logged>.tab {
		transform: rotate(180deg);
		-ms-transform: rotate(180deg);
		/* IE 9 */
		-moz-transform: rotate(180deg);
		/* Firefox */
		-webkit-transform: rotate(180deg);
		/* Safari 和 Chrome */
		-o-transform: rotate(180deg);
	}

	.header-me .no-logged,
	.header-me .logged {
		display: flex;
		padding: 20px 0;
	}

	.header-me .logged {
		justify-content: space-between;
	}

	.header-me .no-logged li {
		flex: 1 0 auto;
	}

	.header-me .no-logged li a {
		font-family: var(--heading-font-family);
		font-weight: var(--heading-font-weight);
		font-style: var(--heading-font-style);
	}

	.order-me {
		background-color: #fff;
		margin-top: 10px;
	}

	.order-me h2 {
		font-family: var(--heading-font-family);
		font-weight: var(--heading-font-weight);
		font-style: var(--heading-font-style);
		padding: 10px 0;
	}

	.order-me .icon-box {
		overflow-x: scroll;
		width: 100%;
		padding-bottom: 10px;
	}

	.order-me .icons {
		width: 144%;
		display: flex;
		justify-content: space-between;
	}

	.order-me .icons li {
		cursor: pointer;
	}

	.order-me .icon {
		font-size: 2em;
	}

	.order-me span {
		font-size: 0.85rem;
	}

	.order-me .current {
		color: #b82928;
	}

	.body-me {
		margin-top: 10px;
	}

	.body-me .card {
		border: none;
	}

	.body-me.loading {
		color: #666666;
		width: 100%;
		height: 60px;
		font-size: 2em;
		text-align: center;
	}

	.body-me.loading>svg {
		animation: loading;
		animation-duration: .3s;
		animation-iteration-count: infinite;
		animation-timing-function: linear;
	}

	.body-me.loading>.loading-text {
		font-size: 0.8rem;
	}

	@keyframes loading {
		from {
			transform: rotate(0);
		}

		to {
			transform: rotate(45deg);
		}
	}

	.body-me .card {
		background-color: #f0f0f0;
		padding: 10px;
	}

	.body-me .order-box {
		margin-bottom: 10px;
		border-radius: 5px;
		padding: 20px;
		background-color: #fff;
	}

	.body-me .order-title {
		display: flex;
		justify-content: space-between;
	}

	.body-me .order-title .title-info>span {
		display: block;
	}

	.body-me .order-title .title-info-name {
		font-family: var(--heading-font-family);
		font-weight: var(--heading-font-weight);
		font-style: var(--heading-font-style);
	}

	.body-me .order-title .title-info-data {
		font-size: 0.8rem;
		color: #666666;
	}

	.body-me .order-body {
		padding-top: 10px;
	}

	.body-me .order-body li {
		display: flex;
		justify-content: space-between;
		padding: 5px 0;
	}

	.body-me .order-body .pro-img {
		width: 30%;
	}

	.body-me .order-body .pro-img>div {
		border: 1px solid #dddddd;
		overflow: hidden;
		border-radius: 10px;
	}

	.body-me .order-body .pro-info {
		width: 70%;
		padding: 0 10px;
	}

	.body-me .order-body .pro-info .info-title {
		font-weight: 700;
		overflow: hidden;
		text-overflow: ellipsis;
		display: -webkit-box;
		-webkit-box-orient: vertical;
		-webkit-line-clamp: 2;
	}

	.body-me .order-body .pro-info .info-style {
		display: flex;
		justify-content: space-between;
		color: #666666;
	}

	.body-me .order-footer {
		text-align: right;
	}

	.body-me .order-footer .all-total {
		font-family: var(--heading-font-family);
		font-weight: var(--heading-font-weight);
		font-style: var(--heading-font-style);
		color: #B82928;
	}

	.post {
		background-color: #fff;
		text-align: center;
		min-height: 100px;
		margin-top: 10px;
		display: none;
	}

	.post h3 {
		line-height: 100px;
		font-size: 1.3rem;
	}

	.icon-box li {
		display: inline-block;
		text-align: center;
	}

	.text-l {
		text-align: left;
	}

	.text-r {
		text-align: right;
	}

	.hidden {
		display: none;
	}

	.advert-me {
		background-color: #fff;
		margin-top: 10px;
		min-height: 400px;
	}

	.advert-me ul {
		padding: 50px 20px 0;
	}

	.advert-me li {
		height: 50px;
		line-height: 50px;
		width: 100%;
		text-align: center;
		margin-bottom: 20px;
		background-color: #707070;
	}

	.advert-me li a {
		font-family: var(--heading-font-family);
		font-weight: var(--heading-font-weight);
		font-style: var(--heading-font-style);
		color: #ffffff;
		text-shadow: -2px 1px 3px rgba(0, 0, 0, .5);
	}


	.vip-overview__rule {
		font-size: 14px;
		color: #edede5;
		padding: 1rem 1rem 0;

	}

	.vip-overview__rule p {
		margin: 0;
	}

	.vip-rules__link {
		text-decoration: underline;
		cursor: pointer;
		display: inline-block;
		font-weight: 500;
	}

	.vip-icon__box {
		display: inline-block;
		background-color: #aaa;
		border-radius: 1rem;
		padding: 0 0.8rem;
	}

	.vip-icon__box .icon {
		font-size: 1.6rem;
	}

	.vip-icon__box span {
		padding: 0 6px;

	}

	.vip-level__s0 {
		background-color: #000000;
		border-radius: 50%;
		width: 0.6rem;
		height: 0.6rem;
	}

	.vip-solid {
		background-color: #b8b8b8;
		height: 1px;
		width: 2rem;
	}

	.vip-grade {
		padding: 1rem 0 2rem;
		align-items: center;
		justify-items: flex-start;
	}

	.vip-user__avatar {
		width: 4rem;
		height: 4rem;
		border-radius: 50%;
	}

	.vip-user__name {
		padding: 0 1rem;

	}

	.vip-page {
		justify-content: space-between;
		background: url('https://cdn.shopify.com/s/files/1/0595/0691/7535/files/bg_main_s0-76143950f1.png?v=1664507536') no-repeat -2rem 0rem;
		background-size: 106% 100%;
		background-clip: border-box;
		min-height: 200px;
		padding: 2rem 3rem;
		display: grid;
		grid: auto-flow auto / repeat(2, 50%);
	}

	.vip-grade img {
		width: 2rem;
		height: 2rem;
	}

	.vip-grade,
	.vip-info__title {
		margin-left: 2rem;
	}

	.vip-rules {
		background-color: #eee;
		z-index: 3;
		color: #000000;
		cursor: text;
		padding: 1rem 2rem;
	}

	.vip-rules__title {
		text-align: center;
	}

	.rule-table {
		margin: 20px 0;
	}

	.rule-table td,
	.rule-table th {
		padding: 6px 10px;
	}

	.rule-table td:nth-child(1n+2),
	.rule-table th:nth-child(1n+2) {
		background-color: #c8c8c8;
		text-align: center;
	}

	.rule-tex {
		margin-bottom: 16px;
	}

	.close-rule__page {
		float: right;
		cursor: pointer;
	}

	.card.card--sticky {
		background-color: #eee;
	}

	.my-coupons .h3,
	.order-preview .h3,
	.profile-view .h3 {
		text-align: center;
		font-weight: 700;
	}

	.profile-story__title {
		font-weight: 700;
	}

	.my-coupons {
		margin-top: 3rem;
		background-color: #eee;
		padding: 0 10px 3rem;
	}

	.my-coupons__title {
		padding: 1rem 0;
	}

	.coupons-date {
		margin-top: 0.8rem;
		font-size: 12px;
	}

	.coupons-date li {
		list-style: disc;
		line-height: 1.4;
	}

	.my-coupons__list {
		display: grid;
		grid: auto-flow auto / repeat(2, auto);
		grid-column-gap: 4rem;
		grid-row-gap: 3rem;
		color: #fff;
		justify-content: center;
		align-items: center;
	}

	.my-coupons__list p {
		margin: 0;
	}

	.my-coupons__item {
		/* background-image: url('https://cdn.shopify.com/s/files/1/0595/0691/7535/files/coup.jpg?v=1664507060');
		background-position: center;
		background-repeat: no-repeat;
		background-size: 100% 100%;
		background-clip: border-box;
		padding: 0.6rem 4rem; */
		position: relative;
		overflow: hidden;
		-moz-user-select: none;
		-webkit-user-select: none;
		-ms-user-select: none;
		-khtml-user-select: none;
		-o-user-select: none;
		user-select: none;
		display: grid;
		grid-template-columns: 50% 50%;
		color: #000;
		width: 350px;
	}

	#main {
		background-color: #fff;
	}

	.backgrount_e {
		background-color: #eee;
	}

	.profile-view {
		padding: 30px 2rem;
	}

	.profile-record {
		margin-top: 2rem;
		padding: 2rem;
	}

	.profile-record h4 {
		margin: 0;
		font-size: 18px;
	}

	.page__item {
		margin-top: 1rem;
	}

	.page__item th {
		background-color: #d6d6d6;

	}

	.page__item th,
	.page__item td {
		text-align: center;
		padding: 8px 0;

	}

	.page__item table {
		width: 100%;
	}

	.profile-nav>summary {
		display: inline-block;
		margin-right: 1rem;
		padding: 1rem 1rem 0;
		cursor: pointer;
	}

	.profile-amount {
		color: #1ea364;
	}

	.card__linklist {
		overflow-x: auto;
		padding-bottom: 1rem;
	}

	.mobile-account__nav {
		width: 270%;
		justify-content: space-between;

	}

	.customers-services {
		background-color: #eee;
		text-align: center;
		min-height: 100px;
		margin-top: 10px;
		padding: 2rem;
	}

	.my_addresses .card {
		background-color: #eee;
	}

	.product-list--collection,
	.product-list--collection .product-item {
		background-color: #fff;
	}

	@media screen and (max-width: 648px) {
		.profile-view {
			padding: 30px 10px;
		}

		.profile-record {
			margin: 0;
			padding: 10px;
		}

		.profile-nav>summary {
			margin: 0;
		}

		.my-coupons {
			margin-top: 1rem;
		}

		.my-coupons__list {
			grid: auto-flow auto / repeat(1, auto);
			grid-row-gap: 2rem;
		}

		.order-preview {
			/* margin-top: 1.6rem; */
			display: none;
		}

		.vip-page {
			padding: 1rem 10px;
			background: #eee;
			grid: repeat(2, auto)/ auto-flow auto;
			grid-row-gap: 1rem;
		}

		.vip-overview {
			padding: 0 2rem
		}

		.vip-overview__rule {
			padding: 1rem 2rem;
			background: #636363;
		}

		.vip-upgrade__info {
			display: flex;
			flex-wrap: wrap;
		}

		.vip-upgrade__header {
			font-weight: 600;
		}

		.my_coupons {
			padding: 1rem 2.6rem;
		}

		.my_addresses .h1 {
			text-align: center;
		}

		.order-me .h3 {
			text-align: center;
		}

		.my-coupons__item {
			width: 320px;
		}


	}

	.my-coupons_empty {
		display: block !important;
	}

	.my-coupons_empty>.empty {
		color: #000;
		text-align: center;
	}

	.empty>.icon--package {
		font-size: 5rem;
	}

	.page__item[aria-hidden="true"] {
		display: none;
	}

	.collect .openQuickView {
		display: none;
	}

	.collect .product-item__action-button--list-view-only {
		display: block;
	}

	.empty {
		text-align: center;
		color: #000;
	}

	.coupon_code {
		user-select: text;
		text-transform: uppercase;
	}

	.expired__coupons .codeLeft {
		background: rgb(143 143 143 / 90%);
	}

	.expired__coupons .codeRight {
		background: rgb(55 55 55 / 82%);
		color: #000;
	}

	.expired__coupons .codeSave {
		background: rgb(110 110 110 / 88%);
	}

	.expired__coupons .codeAmount {
		background: rgb(5, 5, 5, 0.3);
		color: #000;
	}

	.couponDost {
		background: #eee;
		width: 10px;
		height: 10px;
		border-radius: 6px;
	}

	.couponDos {
		position: absolute;
		display: flex;
		flex-direction: column;
		justify-content: space-evenly;
		top: 0;
		bottom: 0;
	}

	.dostLeft {
		left: -4px;
	}

	.dostRight {
		right: -4px;
	}

	.codeAmount {
		background: #050505;
		color: #fcbe0f;
		flex: 1;
		margin-left: 10px;
		position: relative;
		padding: 0 6px;
	}

	.codeSave {
		max-width: 82%;
		margin: 0 auto;
		background: #ffbd14;
		padding: 2px;
		color: #000;
		padding-left: 4px;
		line-height: 1.5;
		border-radius: 6px;
	}

	.codeLeft {
		background: #ffbd16;
		padding-left: 24px;
		font-size: 12px;
		padding-top: 6px;
		padding-bottom: 8px;
	}

	.codeRight {
		color: #ffbd17;
		text-transform: uppercase;
		font-size: 1.4rem;
		font-weight: 800;
		background: #000;
	}

	.my-order__title {
		padding: 0 0 1rem;
		text-align: center;
	}

	.orders-nav {
		justify-content: center;
	}

	.title-info-name {
		cursor: pointer;

	}

	.order-render__view,
	.order-item__card>.card__section,
	.order-box {
		background-color: #eee;
	}

	.info-title,
	.info-style,
	.title-info {
		justify-content: space-between;
	}

	.title-state {
		/* float: right; */
		text-align: right;
	}

	.info-style {
		color: #9d9898;
	}

	.pro-info__discount {
		color: #cf0e0e;
		font-size: 0.9rem;
	}

	.pro-info__text {
		text-align: right;
		margin-bottom: 0;
	}

	.pro-info__title,
	.pro-info__paid {
		font-weight: 600;
	}

	.info-price__scribe {
		text-decoration: line-through;
	}

	.orders-nav__list {
		justify-content: center;
	}

	.orders-nav__list svg {
		font-size: 1.4rem;
	}

	.pro-info {
		/* display: inline-block; */
		padding: 0 2rem;
		width: 100%;
	}

	.order-box {
		padding: 1rem 1rem;
		margin-bottom: 1rem;
	}

	.order-item__card-body {
		padding: 1rem 0;
		margin-bottom: 2rem;
		border-bottom: 1px solid #ccc;
	}

	.orders-nav__item {
		margin: 0 20px;
		cursor: pointer;
	}

	.order-item__card[aria-hidden="true"] {
		display: none;
	}

	.order-footer {
		text-align: right;
	}

	.order-item__card[aria-hidden="false"] {
		display: block;
	}

	.order-item__card {
		background-color: #fff;
	}

	.orders-nav__item[data-action="true"] {
		color: #770202;
		border-bottom: 1px solid #770202;
	}

	.card__linklist-item>.icon {
		margin-right: 4px;
	}
</style>

<section data-section-id="{{ section.id }}" data-section-type="account" id="account">
	{%- comment -%}------------------------------ Mobile Nav--------------------------{%- endcomment -%}
	<div class="hidden-lap-and-up account">
		<div class="header-me container">
			{%- if customer -%}

			<div class="account-box">
				<h3 class="mobile-account__title">My Service</h3>
				<div class="card__linklist ">
					<div class="render_nav_list d-flex mobile-account__nav">

						<div class="card__linklist-item link text--stronger" data-right="my_overview"
							data-action="left-nav" aria-label="My Account">
							{%- render 'icon', icon: 'account-text' -%}
							<span>My Account</span>
						</div>
						<div class="card__linklist-item link" data-right="my_profile" data-action="left-nav"
							aria-label="My Profile">
							{%- render 'icon', icon: 'account-my' -%}
							<span>My Profile</span>
						</div>
						<div class="card__linklist-item link" data-right="my_coupons" data-action="left-nav"
							aria-label="My Coupons">
							{%- render 'icon', icon: 'coupon' -%}
							<span>My Coupons</span>
						</div>
						<div class="card__linklist-item link" data-right="my_orders" data-action="left-nav"
							aria-label="My Orders">
							{%- render 'icon', icon: 'account-cart' -%}
							<span>My Orders</span>
						</div>
						<div class="card__linklist-item link" data-right="wish_list" data-action="left-nav"
							aria-label="My Wishlist">
							{%- render 'icon', icon: 'account-collect' -%}
							<span>My Wishlist</span>
						</div>
						<div class="card__linklist-item link" data-right="my_addresses" data-action="left-nav"
							aria-label="My Addresses">
							{%- render 'icon', icon: 'account-location' -%}
							<span>My Addresses</span>
						</div>
						<div class="card__linklist-item link" data-right="my_postsale" data-action="left-nav"
							aria-label="Customers Services">
							<span> {%- render 'icon', icon: 'cjj_post_sale' -%}</span>
							<span>Customers Services</span>
						</div>
						<a href="{{ routes.account_logout_url }}" class="card__linklist-item link" data-no-instant>{%
							render 'icon', icon :"account-logout" %} {{ 'customer.general.logout' | t }}</a>
					</div>
				</div>
			</div>

			{%- else -%}
			<ul class="no-logged">
				<li class="text-l"><a href="{{ routes.account_login_url }}?return_url={{ page.url }}">LOGIN &gt;</a>
				</li>
				<li class="text-r"><a href="{{ routes.account_register_url }}">CREATE ACCOUNT&gt;</a></li>
			</ul>
			{%- endif -%}
		</div>

	</div>

	{%- comment -%}------------------------------- desktop crumbs---------------------------{%- endcomment -%}
	<div class="page__sub-header hidden-tablet">
		<nav aria-label="{{ 'general.breadcrumb.title' | t }}" class="breadcrumb">
			<ol class="breadcrumb__list" role="list">
				<li class="breadcrumb__item">
					<a class="breadcrumb__link link" href="{{ routes.root_url }}">{{ 'general.breadcrumb.home' | t
						}}</a>
					{%- render 'icon', icon: 'arrow-right' -%}
				</li>
				<li class="breadcrumb__item">
					<a class="breadcrumb__link link" href="{{ routes.account_url }}">{{ 'general.breadcrumb.account' | t
						}}</a>
					{%- render 'icon', icon: 'arrow-right' -%}
				</li>

				<li class="breadcrumb__item">
					<span class="breadcrumb__link" aria-current="page">Account Overview</span>
				</li>
			</ol>
		</nav>
	</div>

	{%- comment -%}-----------------------------------------container-------------------{%- endcomment -%}
	<div class="container container--flush">
		<div class="layout">
			{%- comment -%}------------------------Desktop Nav ----------------------{%- endcomment -%}
			<div class="layout__section layout__section--secondary hidden-phone">
				<div class="card card--sticky hidden-pocket">
					<div class="card__section card__section--tight">
						<div class="card__linklist table-left-nav">
							<div class="render_nav_list ">
								<div class="card__linklist-item link text--stronger" data-right="my_overview"
									data-action="left-nav" aria-label="My Account">
									{%- render 'icon', icon: 'account-text' -%}
									<span>My Account</span>
								</div>
								<div class="card__linklist-item link" data-right="my_profile" data-action="left-nav"
									aria-label="My Profile">
									{%- render 'icon', icon: 'account-my' -%}
									<span>My Profile</span>
								</div>
								<div class="card__linklist-item link" data-right="my_coupons" data-action="left-nav"
									aria-label="My Coupons">
									{%- render 'icon', icon: 'coupon' -%}
									<span>My Coupons</span>
								</div>
								<div class="card__linklist-item link" data-right="my_orders" data-action="left-nav"
									aria-label="My Orders">
									{%- render 'icon', icon: 'account-cart' -%}
									<span>My Orders</span>
								</div>
								<div class="card__linklist-item link" data-right="wish_list" data-action="left-nav"
									aria-label="My Wishlist">
									{%- render 'icon', icon: 'account-collect' -%}
									<span>My Wishlist</span>
								</div>
								<div class="card__linklist-item link" data-right="my_addresses" data-action="left-nav"
									aria-label="My Addresses">
									{%- render 'icon', icon: 'account-location' -%}
									<span>My Addresses</span>
								</div>
								<div class="card__linklist-item link" data-right="my_postsale" data-action="left-nav"
									aria-label="Customers Services">
									{%- render 'icon', icon: 'cjj_post_sale' -%}
									<span>Customers Services</span>
								</div>
								<a href="{{ routes.account_logout_url }}" class="card__linklist-item link"
									data-no-instant>{% render 'icon', icon :"account-logout" %} {{
									'customer.general.logout' | t }}</a>
							</div>
						</div>
					</div>
				</div>
			</div>

			<div class="layout__section ">
				{%- comment -%}--------------------------收藏列表-------------------{%- endcomment -%}
				<div class="wish_list account_right_content" data-type="accountPage">
					<header>
						<h1 class="center wish_title">MY WISHLIST</h1>
					</header>

					<div class="wish_loading">
						<div class="body-me loading">
							{%- render 'icon', icon: 'cjj_loading' -%}
							<span class="loading-text">&nbsp;loading...</span>
						</div>
					</div>

					<div class="collect page-width"></div>

					<div id="czquickview" class="modal" aria-hidden="true">
						<div class="modal__dialog modal__dialog--stretch" role="dialog">
							<button class="modal__close link" data-action="close-modal" title="Close"><svg
									focusable="false" class="icon icon--close " viewBox="0 0 19 19" role="presentation">
									<path
										d="M9.1923882 8.39339828l7.7781745-7.7781746 1.4142136 1.41421357-7.7781746 7.77817459 7.7781746 7.77817456L16.9705627 19l-7.7781745-7.7781746L1.41421356 19 0 17.5857864l7.7781746-7.77817456L0 2.02943725 1.41421356.61522369 9.1923882 8.39339828z"
										fill="currentColor" fill-rule="evenodd"></path>
								</svg>
							</button>

							<div class="modal__loader"><svg focusable="false" class="icon icon--search-loader "
									viewBox="0 0 64 64" role="presentation">
									<path opacity=".4"
										d="M23.8589104 1.05290547C40.92335108-3.43614731 58.45816642 6.79494359 62.94709453 23.8589104c4.48905278 17.06444068-5.74156424 34.59913135-22.80600493 39.08818413S5.54195825 57.2055303 1.05290547 40.1410896C-3.43602265 23.0771228 6.7944697 5.54195825 23.8589104 1.05290547zM38.6146353 57.1445143c13.8647142-3.64731754 22.17719655-17.89443541 18.529879-31.75914961-3.64743965-13.86517841-17.8944354-22.17719655-31.7591496-18.529879S3.20804604 24.7494569 6.8554857 38.6146353c3.64731753 13.8647142 17.8944354 22.17719655 31.7591496 18.529879z">
									</path>
									<path
										d="M1.05290547 40.1410896l5.80258022-1.5264543c3.64731754 13.8647142 17.89443541 22.17719655 31.75914961 18.529879l1.5264543 5.80258023C23.07664892 67.43614731 5.54195825 57.2055303 1.05290547 40.1410896z">
									</path>
								</svg>
							</div>

							<div class="modal__inner">
								<div class="abc"></div>
							</div>
						</div>
					</div>

					{%- if customer -%}
					<div class="collect-body" style="display: none;">
						<div class=" collect-body-layout">
							<div class="wish_center">
								You currently have nothing saved to your Wishlist.<br />
								Personalize your shopping experience with your Wishlist.
							</div>
							<div class="d-flex aic jcc sign-button">
								<a href="/collections/shop" class="sign-button">Let's Get Started!</a>
							</div>
						</div>
					</div>
					{%- endif -%}

				</div>

				{%- comment -%}--------------------------订单列表--------------------{%- endcomment -%}

				<div class="card my_orders account_right_content" data-type="accountPage">
					{%- comment -%}-------------------------- desktop --------------{%- endcomment -%}
					<div class="hidden-phone">
						{% render 'my-order-view' customer:customer%}
					</div>

					{%- comment -%}----------------------------mobile------------------------{%- endcomment -%}
					<div class="large_pad hidden-tablet-and-up ">
						<div class="order-me container">
							<h3 class="h3">{{- 'customer.general.orders' | t -}}</h3>
							<div class="icon-box">
								<ul class="icons" id="orders-list">
									<li data-item="orders-all" class="current" data-type="orders-list" aria-label="All">
										{%- render 'icon', icon: 'cjj_all' -%}<br />
										<span>All</span>
									</li>
									<li data-item="orders-unpaid" data-type="orders-list" aria-label="Unpaid">
										{%- render 'icon', icon: 'cjj_unpaid' -%}<br />
										<span>Unpaid</span>
									</li>
									<li data-item="orders-processing" data-type="orders-list" aria-label="Processing">
										{%- render 'icon', icon: 'cjj_processing' -%}<br />
										<span>Processing</span>
									</li>
									<li data-item="orders-shipped" data-type="orders-list" aria-label="Shipped">
										{%- render 'icon', icon: 'cjj_shipped' -%}<br />
										<span>Shipped</span>
									</li>
									<li data-item="orders-payment" data-type="orders-list" aria-label="Payment">
										{%- render 'icon', icon: 'cjj_payment' -%}<br />
										<span>Payment</span>
									</li>
									<li data-item="orders-completed" data-type="orders-list" aria-label="Completed">
										{%- render 'icon', icon: 'cjj_completed' -%}<br />
										<span>Completed</span>
									</li>
									{%- comment -%}
									<li data-item="post-sale" data-type="orders-list" aria-label="Processing">
										{%- render 'icon', icon: 'cjj_post_sale' -%}<br />
										<span>Post-sale</span>
									</li>
									{%- endcomment -%}
								</ul>
							</div>

						</div>
						<div class="body-me loading" id="loading">
							{%- render 'icon', icon: 'cjj_loading' -%}
							<span class="loading-text">&nbsp;loading...</span>
						</div>
						<div class="card__section" id="order_null">
							<div class="empty-state empty-state--extra-tight">
								<div class="empty-state__icon">
									{%- render 'icon', icon: 'package' -%}
									<span class="empty-state__count">0</span>
								</div>
								<p class="empty-state__icon-description">{{ 'customer.general.no_orders' | t }}</p>
								<div class="empty-state__button-container">
									<a href="{{ routes.all_products_collection_url }}"
										class="empty-state__button button button--primary">{{
										'customer.general.no_orders_button' | t }}</a>
								</div>
							</div>
						</div>

						<div class="body-me" id="body_me">{%- comment -%}<!--渲染订单区域-->{%- endcomment -%}</div>
						<div class="post" id="post">
							<div class="container">
								<h3>
									{%- render 'icon', icon: 'bi-email' -%}&nbsp;&nbsp;
									<a href="mailto:{{shop.email}}" target="_blank" rel="noopener"
										aria-describedby="a11y-new-window-message">{{shop.email}}</a>
								</h3>
							</div>
						</div>
						<div class="advert-me container">
							<ul>
								<li><a href="{{ routes.cart_url }}">SHOPPING CART</a></li>
								<li><a href="{{ routes.root_url }}collections/hot-sale">HOT SALE</a></li>
							</ul>
						</div>
					</div>
				</div>

				{%- comment -%}------------------------VIP 信息和优惠券概览-----------------------{%- endcomment -%}
				<div class="my_overview account_right_content" data-type="accountPage">
					{%- comment -%}规则说明{%- endcomment -%}
					<div class="vip-rules" style="display:none;">

						<div class="close-rule__page">{% render 'icon',icon:'close' %} </div>

						<h1 class="h1 vip-rules__title">About Rules</h1>
						<h3 class="h3">1. Introduction</h3>
						<div class="rule-tex">
							There is no fee for the HYFOL VIP. HYFOL VIP membership is limited to individuals only and
							limited to one
							account per individual.It is your identification that represent you are at legal ages to
							join our program
							and responsibility for your membership to keep your email and contact details up to date in
							your Account.HYFOL
							reserves the right to disqualify Members who have violated any Of theTerms and Conditions.
							Any
							fraudulent activity or attempt to manipulate or abuse the program will result in the account
							being
							removed from the program without notice. When a Membership is terminated, all outstanding
							coupons and
							outstanding rewards associated with the Membership are forfeited.
						</div>
						<h3 class="h3">2. Membership</h3>
						<div class="rule-tex">
							Every tier is valid for 12 months from the date the HYFOL VIP member qualifies(exclude
							silver member). identity
							validation is required every month.Data refreshes typically take up to 24 hours. Please
							check your level after
							24 hours. Once you become a silver member,you will earn a life-long status. Please note that
							the level of your
							membership is based on the times of eligible purchases or the amount of eligible spending
							during the past 12
							months which is 45 days before the refresh date every month.
							<table border="1px" class="rule-table">
								<thead>
									<tr>
										<th> </th>
										<th>Silver</th>
										<th>Gold</th>
										<th>Platinum</th>
									</tr>
								</thead>
								<tbody>
									<tr>
										<th>
											Points Redeem
										</th>
										<td>{% render 'icon',icon:"check" %}</td>
										<td>{% render 'icon',icon:"check" %}</td>
										<td>{% render 'icon',icon:"check" %}</td>
									</tr>
									<tr>
										<th>
											Level-up Coupon
										</th>
										<td></td>
										<td>{% render 'icon',icon:"check" %}</td>
										<td>{% render 'icon',icon:"check" %}</td>
									</tr>
									<tr>
										<th>
											Free Shipping Card
										</th>
										<td></td>
										<td>{% render 'icon',icon:"check" %}</td>
										<td>{% render 'icon',icon:"check" %}</td>
									</tr>
									<tr>
										<th>
											Birthday Gifts
										</th>
										<td></td>
										<td></td>
										<td>{% render 'icon',icon:"check" %}</td>
									</tr>
									<tr>
										<th>
											Exclusive Promotions
										</th>
										<td></td>
										<td></td>
										<td>{% render 'icon',icon:"check" %}</td>
									</tr>
								</tbody>
							</table>
							<p style="color:#919191 ;">( The Eligible Purchases means purchases on the HYFOL website
								during the past 12
								months which is 45 days
								before 10h every month.)</p>
						</div>
						<h3 class="h3">3. Rewards </h3>
						<div class="rule-tex">
							Membership in the program may entitle you to various ofers in addition to rewards . The
							details of these
							ofers are set out from time to time to your personal acCount.
						</div>
					</div>

					<div class="my-account">
						<div class="vip-page ">
							<div class="vip-overview">
								<div class="vip-user d-flex">
									<div class="vip-user__avatar">
										<img class="lazyload" alt="fill"
											src="https://cdn.shopify.com/s/files/1/0595/0691/7535/files/bd0d72d9c0dedca8253dc2549b1a1017.png?v=1664507136">
									</div>
									<div class="vip-user__name">
										<span style="margin-bottom:6px; display: block;">{{customer.name}}</span>
										<div class="vip-icon__box">
											{%- render 'icon',icon:'vip',class:'vip' -%}
											<span class="vip-user__grade"> </span>
										</div>
										<div class="vip-icon__box">
											{% render "icon",icon:'integral' %}
											<span class="vip-integral">0</span>
										</div>

									</div>
								</div>

								<div class="vip-grade d-flex">
									<span class="vip-level__s0">
									</span>
									<span class="vip-solid"></span>
									<span class="vip-level__s1">
										<img src="{{'s1.png' | asset_url}}" alt="">
										{%- comment -%}<span class="vip-grade__name">Silver</span>{%- endcomment -%}
									</span>
									<span class="vip-solid"></span>
									<span class="vip-level__s2">
										<img src="{{'s2.png' | asset_url}}" alt="">
										{%- comment -%}<span class="vip-grade__name">Gold</span>{%- endcomment -%}
									</span>
									<span class="vip-solid"></span>
									<span class="vip-level__s3">
										<img src="{{'s3.png' | asset_url}}" alt="">
										{%- comment -%}<span class="vip-grade__name">Platinum</span>{%- endcomment -%}
									</span>
								</div>
								<p class="vip-info__title">Welcome to the HYFOL VIP</p>
							</div>

							<div class="vip-overview__rule">
								<p class="vip-upgrade__info">
									<span class="vip-upgrade__header">Silver: </span> US$0.1 or 1 order(s) are required
									to become a silver member
								</p>
								<p class="vip-upgrade__info">
									<span class="vip-upgrade__header">Gold: </span>US$120 or 3 order(s) are required to
									become a gold member
								</p>
								<p class="vip-upgrade__info">
									<span class="vip-upgrade__header">Platinum: </span> US$500 or 5 order(s) are
									required to become a platinum member
								</p>
								<summary class="vip-rules__link">
									About rules
								</summary>
							</div>
						</div>

						{%- assign order_unpaid = 0 -%}
						{%- assign order_processing = 0 -%}
						{%- assign order_shipped = 0 -%}
						{%- assign order_payment = 0 -%}
						{%- assign order_completed = 0 -%}

						{%- for order in customer.orders -%}
						{% if order.financial_status=='unpaid' or order.financial_status=='pending' %}
						{%- assign order_unpaid = order_unpaid | plus: 1 -%}
						{% endif%}
						{% if order.fulfillment_status=='on hold' %}
						{%- assign order_processing = order_processing | plus: 1 -%}
						{% endif %}
						{% if order.fulfillment_status=='in progress' %}
						{%- assign order_shipped = order_shipped | plus: 1 -%}
						{% endif%}
						{% if order.financial_status=='paid' %}
						{%- assign order_payment = order_payment | plus: 1 -%}
						{% endif %}
						{% if order.fulfillment_status=='fulfilled' %}
						{%- assign order_completed = order_completed | plus: 1 -%}
						{% endif%}
						{%- endfor -%}

						<div class="my-coupons">
							<h3 class="h3 my-coupons__title">Unused Coupons</h3>
							<div class="my-coupons__list my-coupons_empty">
								<div class="empty">
									{%- render 'icon',icon:"package" -%}
									<p>It is empty here :-(</p>
								</div>
							</div>
						</div>
						{%- comment -%}--------------------------订单导航-----------------------------------{%- endcomment
						-%}
						<div class="order-preview overview-box ">
							<h3 class="h3">My Order</h3>
							<div class="icon-box">
								<ul class="d-flex  account-overview__list icons">
									<li class="order-preview__item" data-nav-type="All">
										<span class="order-icon">
											{%- render 'icon', icon: 'cjj_all' -%}
											{%- comment -%}
											<span class="empty-state__count redio-icon">{{customer.orders_count}}</span>
											{%- endcomment -%}
										</span>
										<p>All</p>
										</a>
									</li>
									<li class="order-preview__item" data-nav-type="Unpaid">
										<span class="order-icon">
											{%- render 'icon', icon: 'cjj_unpaid' -%}
											{%- if order_unpaid!=0 -%}
											<span class="empty-state__count redio-icon">{{order_unpaid}}</span>
											{%- endif -%}
										</span>
										<p>Unpaid</p>
									</li>
									<li class="order-preview__item" data-nav-type="Processing">
										<span class="order-icon">
											{%- render 'icon', icon: 'cjj_processing' -%}
											{%- if order_processing!=0 -%}
											<span class="empty-state__count redio-icon">{{order_processing}}</span>
											{%- endif -%}
										</span>
										<p>Processing</p>
									</li>
									<li class="order-preview__item" data-nav-type="Shipped">
										<span class="order-icon">
											{%- render 'icon', icon: 'cjj_shipped' -%}
											{%- if order_shipped!=0 -%}
											<span class="empty-state__count redio-icon">{{order_shipped}}</span>

											{%- endif -%}
										</span>
										<p>Shipped</p>
									</li>

									<li class="order-preview__item" data-nav-type="Payment">
										<span class="order-icon">
											{%- render 'icon', icon: 'cjj_payment' -%}
											{%- if order_payment!=0 -%}
											<span class="empty-state__count redio-icon">{{order_payment}}</span>

											{%- endif -%}
										</span>
										<p>Payment</p>
									</li>
									<li class="order-preview__item" data-nav-type="Completed">
										<span class="order-icon">
											{%- render 'icon', icon: 'cjj_completed' -%}
											{%- if order_completed!=0 -%}
											<span class="empty-state__count redio-icon">{{order_completed}}</span>
											{%- endif -%}
										</span>
										<p>Completed</p>
									</li>
									<li class="order-preview__item" data-nav-type="Post-sale">
										<span class="order-icon">
											{%- render 'icon', icon: 'cjj_post_sale' -%}<br />
										</span>
										<p>Post-sale</p>
									</li>
								</ul>
							</div>
						</div>

					</div>

				</div>

				{%- comment -%}--------------------------------------优惠券-------------------------------------------{%-
				endcomment -%}
				<div class="my_coupons account_right_content backgrount_e" data-type="accountPage">
					<h3 class="my_coupons__title h3">My Coupons</h3>
					<details-menu>
						<div class="coupons-nav d-flex">
							<summary aria-expanded="true" data-index="1">
								Unused Coupons
							</summary>
							<summary aria-expanded="false" data-index="2">
								Expired Coupons
							</summary>
						</div>
						<div class="unused__coupons page__item" data-index="1" aria-hidden="false">
							<div class="my-coupons">
								{% comment %} <!-- <h3 class="h3 my-coupons__title">Unused Coupons</h3> --> {%
								endcomment %}
								<div class="my-coupons__list my-coupons_empty">
									<div class="empty">
										{%- render 'icon',icon:"package" -%}
										<p>It is empty here :-(</p>
									</div>
								</div>
							</div>
						</div>
						<div class="expired__coupons page__item" data-index="2" aria-hidden="true">
							<div class="my-coupons">
								<!-- <h3 class="h3 my-coupons__title">Unused Coupons</h3> -->
								<div class="my-coupons__list my-coupons_empty">
									<div class="empty">
										{%- render 'icon',icon:"package" -%}
										<p>It is empty here :-(</p>
									</div>
								</div>
							</div>
						</div>
					</details-menu>
				</div>

				{%- comment -%}---------------------------------------{%- endcomment -%}
				<div class="my_profiles account_right_content" data-type="accountPage">
					{%- comment -%}
					<div class="profile-view backgrount_e">
						<h3 class="h3" style="text-align:center;">My Profile</h3>

						<div class="profiles-form">
							<label for="my_name">The Name</label>
							<input type="text" name="" id="my_name">
							<label for="my_brithday">Birthday</label>
							<input type="text" name="" id="my_brithday">

							Fill In For 30+Points
							<div>
								<input type="checkbox" name="" id="checkbox-y">
								<label for="checkbox-y">选项</label>
								<input type="checkbox" name="" id="checkbox-">
								<label for="checkbox-">选项</label>
								<input type="checkbox" name="" id="checkbox-z">
								<label for="checkbox-z">选项</label>
								<input type="checkbox" name="" id="checkbox-k">
								<label for="checkbox-k">选项</label>

							</div>
						</div>
					</div>
					{%- endcomment -%}
				</div>

				{%- comment -%}----------------------------积分概览------------------------{%- endcomment -%}
				<div class="my_profile account_right_content" data-type="accountPage">
					<div class="profile-view backgrount_e">
						<h3 class="h3">My Profile</h3>
						<div class="my-profile__view ">
							<div class="profile-total">
								<div class="profile_total"><strong>0</strong></div>
								<div class="profile_heading">Total Points</div>
							</div>
							<span style="background-color: #aaa;height: 100%;width: 1px;margin: 0 auto;"></span>
							<div class="profile-expire">
								<div class="profile_expire"><strong>0</strong></div>
								<div>Points Expired soon</div>
							</div>
						</div>
					</div>

					{%- comment -%}-----------------积分记录----------------------{%- endcomment -%}
					<div class="profile-record backgrount_e">
						<h4 class="profile-story__title">Profile Detalls</h4>
						<details-menu>
							<div class="profile-nav">
								<summary aria-expanded="true" data-index="1">
									All
								</summary>
								<summary aria-expanded="false" data-index="2">
									Earned
								</summary>
								<summary aria-expanded="false" data-index="3">
									Point Amount
								</summary>
								<summary aria-expanded="false" data-index="4">
									Expired
								</summary>
							</div>
							<div class="profile-all page__item" data-index="1" aria-hidden="false">
								<table border="1">
									<thead>
										<tr>
											<th>Date And Time</th>
											<th>Point Type</th>
											<th>Point Amount</th>
											<th>Expiration Date</th>
										</tr>
									</thead>
									<tbody>
										<tr>
											<td colspan="4">
												<div class="my-coupons_empty">
													<div class="empty">
														{%- render 'icon',icon:"package" -%}
														<p>It is empty here :-(</p>
													</div>
												</div>
											</td>
										</tr>
									</tbody>
								</table>
							</div>
							<div class="profile-earned page__item" data-index="2" aria-hidden="true">
								<table border="1">
									<thead>
										<tr>
											<th>Date And Time</th>
											<th>Point Type</th>
											<th>Point Amount</th>
											<th>Expiration Date</th>
										</tr>
									</thead>
									<tbody>
										<tr>
											<td colspan="4">
												<div class="my-coupons_empty">
													<div class="empty">
														{%- render 'icon',icon:"package" -%}
														<p>It is empty here :-(</p>
													</div>
												</div>
											</td>
										</tr>
									</tbody>
								</table>
							</div>
							<div class="profile-point page__item" data-index="3" aria-hidden="true">
								<table border="1">
									<thead>
										<tr>
											<th>Date And Time</th>
											<th>Point Type</th>
											<th>Point Amount</th>
											<th>Expiration Date</th>
										</tr>
									</thead>
									<tbody>
										<tr>
											<td colspan="4">
												<div class="my-coupons_empty">
													<div class="empty">
														{%- render 'icon',icon:"package" -%}
														<p>It is empty here :-(</p>
													</div>
												</div>
											</td>
										</tr>
									</tbody>
								</table>
							</div>
							<div class="profile-expired page__item" data-index="4" aria-hidden="true">
								<table border="1">
									<thead>
										<tr>
											<th>Date And Time</th>
											<th>Point Type</th>
											<th>Point Amount</th>
											<th>Expiration Date</th>
										</tr>
									</thead>
									<tbody>
										<tr>
											<td colspan="4">
												<div class="my-coupons_empty">
													<div class="empty">
														{%- render 'icon',icon:"package" -%}
														<p>It is empty here :-(</p>
													</div>
												</div>
											</td>
										</tr>
									</tbody>
								</table>
							</div>
						</details-menu>
					</div>
				</div>

				{%- comment -%}----------------------------客户地址------------------------{%- endcomment -%}
				<div class="my_addresses account_right_content " data-type="accountPage">
					<section data-section-id="{{ section.id }}" data-section-type="account">
						<div class="container container--flush">
							<div class="card">
								<div class="card__section card__section--flex card__section--tight">
									<h1 class="card__title heading h1">{{ 'customer.general.addresses' | t }} {% if
										customer.addresses_count > 0 %}({{ customer.addresses_count }}){% endif %}</h1>
									{%- if customer.addresses_count > 0 -%}
									<button class="button button--small button--primary" data-action="open-modal"
										aria-controls="modal-address-new">{{ 'customer.addresses.add_address' | t
										}}</button>
									{%- endif -%}
								</div>

								{%- if customer.addresses_count == 0 -%}
								<div class="card__section">
									<div class="empty-state empty-state--extra-tight">
										<div class="empty-state__icon">
											{%- render 'icon', icon: 'address' -%}
											<span class="empty-state__count">0</span>
										</div>

										<p class="empty-state__icon-description">{{ 'customer.addresses.no_addresses' |
											t }}</p>

										<div class="empty-state__button-container">
											<button class="empty-state__button button button--primary"
												data-action="open-modal" aria-controls="modal-address-new">{{
												'customer.addresses.no_addresses_button' | t }}</button>
										</div>
									</div>
								</div>

								{%- else -%}
								{%- paginate customer.addresses by 8 -%}
								<div class="address-list">
									<div class="address-list__item" data-address>
										<div class="address-list__item-top">
											<p class="heading h6">{{ 'customer.addresses.default_address' | t }}</p>
											{{- customer.default_address | format_address -}}
										</div>

										<div class="address-list__action-list">
											<button class="link link--accented" data-action="open-modal"
												aria-controls="modal-address-{{ customer.default_address.id }}">{{
												'customer.addresses.edit' | t }}</button>
											<!-- <button class="link link--accented" onclick="Shopify.CustomerAddress.destroy({{ customer.default_address.id }}); return false">{{ 'customer.addresses.delete' | t }}</button> -->
											<button type="button" class="link link--accented"
												aria-label="{{ 'customer.addresses.delete' | t }} {{ forloop.index }}"
												data-target="{{ customer.default_address.url }}"
												data-action="deleteAddresses"
												data-confirm-message="{{ 'customer.addresses.delete_confirm' | t }}">
												{{ 'customer.addresses.delete' | t }}
											</button>
										</div>
									</div>

									{%- assign address_count = paginate.current_offset | plus: 2 -%}

									{%- for address in customer.addresses -%}
									{%- if address.id == customer.default_address.id -%}
									{%- continue -%}
									{%- endif -%}

									<div class="address-list__item">
										<div class="address-list__item-top">
											<p class="heading h6">{{ 'customer.addresses.address_number' | t: number:
												address_count }}</p>
											{{- address | format_address -}}
										</div>

										<div class="address-list__action-list">
											<button class="link link--accented" data-action="open-modal"
												aria-controls="modal-address-{{ address.id }}">{{
												'customer.addresses.edit' | t }}</button>
											<!-- <button class="link link--accented" onclick="Shopify.CustomerAddress.destroy({{ address.id }}); return false">{{ 'customer.addresses.delete' | t }}</button> -->
											<button type="button" class="link link--accented 11111111111111"
												aria-label="{{ 'customer.addresses.delete' | t }} {{ forloop.index }}"
												data-target="{{ address.url }}"
												data-confirm-message="{{ 'customer.addresses.delete_confirm' | t }}">
												{{ 'customer.addresses.delete' | t }}
											</button>
										</div>
									</div>

									{%- assign address_count = address_count | plus: 1 -%}
									{%- endfor -%}
								</div>

								{% render 'pagination', paginate: paginate %}
								{% assign dm_paginate_by = paginate.page_size %}{%- endpaginate -%}
								{%- endif -%}
							</div>

						</div>


						{%- assign new_form_errored = false -%}

						{%- capture form_status -%}
						{%- form 'customer_address', customer.new_address, class: 'form' -%}
						{%- if form.errors -%}
						{%- assign new_form_errored = true -%}
						{%- endif -%}
						{%- endform -%}
						{%- endcapture -%}

						<div id="modal-address-new" class="modal"
							aria-hidden="{% if new_form_errored %}false{% else %}true{% endif %}">
							<div class="modal__dialog" role="dialog">
								<header class="modal__header">
									<h3 class="modal__title heading h2">{{ 'customer.addresses.add_address' | t }}</h3>
									<button class="modal__close link" data-action="close-modal"
										title="{{ 'general.accessibility.close' | t | escape }}">
										{%- render 'icon', icon: 'close' -%}
									</button>
								</header>

								<div class="modal__content modal__content--ios-push">
									<p class="modal__description">{{ 'customer.addresses.form_subtitle' | t }}</p>

									{%- form 'customer_address', customer.new_address, class: 'form' -%}
									{%- if form.errors -%}
									<div class="alert alert--error">
										<ul class="alert__error-list" role="list">
											{%- for field in form.errors -%}
											{%- if field == 'form' -%}
											<li class="alert__error-item">{{ form.errors.messages[field] }}</li>
											{%- else -%}
											<li class="alert__error-item"><strong>{{
													form.errors.translated_fields[field] }}</strong> {{
												form.errors.messages[field] }}</li>
											{%- endif -%}
											{%- endfor -%}
										</ul>
									</div>
									{%- endif -%}

									{%- if request.locale.iso_code == 'ja' -%}
									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-new[last_name]" type="text"
											class="form__field form__field--text {% if form.last_name != blank %}is-filled{% endif %}"
											name="address[last_name]" value="{{ form.last_name }}" autofocus>
										<label for="address-new[last_name]" class="form__floating-label">{{
											'customer.addresses.last_name' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-new[first_name]" type="text"
											class="form__field form__field--text {% if form.first_name != blank %}is-filled{% endif %}"
											name="address[first_name]" value="{{ form.first_name }}">
										<label for="address-new[first_name]" class="form__floating-label">{{
											'customer.addresses.first_name' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-new[zip]" type="text"
											class="form__field form__field--text {% if form.zip != blank %}is-filled{% endif %}"
											name="address[zip]" value="{{ form.zip }}">
										<label for="address-new[zip]" class="form__floating-label">{{
											'customer.addresses.zip' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<div class="select-wrapper select-wrapper--primary is-filled">
											{%- render 'icon', icon: 'arrow-bottom' -%}
											<select name="address[country]" id="address-new[country]">{{
												all_country_option_tags }}</select>
										</div>

										<label for="address-new[country]" class="form__floating-label">{{
											'customer.addresses.country' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled"
										style="display: none">
										<div class="select-wrapper select-wrapper--primary is-filled">
											{%- render 'icon', icon: 'arrow-bottom' -%}
											<select name="address[province]" id="address-new[province]"></select>
										</div>

										<label for="address-new[province]" class="form__floating-label">{{
											'customer.addresses.province' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-new[city]" type="text"
											class="form__field form__field--text {% if form.city != blank %}is-filled{% endif %}"
											name="address[city]" value="{{ form.city }}">
										<label for="address-new[city]" class="form__floating-label">{{
											'customer.addresses.city' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-new[address1]" type="text"
											class="form__field form__field--text {% if form.address1 != blank %}is-filled{% endif %}"
											name="address[address1]" value="{{ form.address1 }}">
										<label for="address-new[address1]" class="form__floating-label">{{
											'customer.addresses.address1' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-new[address2]" type="text"
											class="form__field form__field--text {% if form.address2 != blank %}is-filled{% endif %}"
											name="address[address2]" value="{{ form.address2 }}">
										<label for="address-new[address2]" class="form__floating-label">{{
											'customer.addresses.address2' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-new[company]" type="text"
											class="form__field form__field--text {% if form.company != blank %}is-filled{% endif %}"
											name="address[company]" value="{{ form.company }}">
										<label for="address-new[company]" class="form__floating-label">{{
											'customer.addresses.company' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-new[phone]" type="text"
											class="form__field form__field--text {% if form.phone != blank %}is-filled{% endif %}"
											name="address[phone]" value="{{ form.phone }}">
										<label for="address-new[phone]" class="form__floating-label">{{
											'customer.addresses.phone' | t }}</label>
									</div>
									{%- else -%}
									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-new[first_name]" type="text"
											class="form__field form__field--text {% if form.first_name != blank %}is-filled{% endif %}"
											name="address[first_name]" value="{{ form.first_name }}" autofocus>
										<label for="address-new[first_name]" class="form__floating-label">{{
											'customer.addresses.first_name' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-new[last_name]" type="text"
											class="form__field form__field--text {% if form.last_name != blank %}is-filled{% endif %}"
											name="address[last_name]" value="{{ form.last_name }}">
										<label for="address-new[last_name]" class="form__floating-label">{{
											'customer.addresses.last_name' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-new[company]" type="text"
											class="form__field form__field--text {% if form.company != blank %}is-filled{% endif %}"
											name="address[company]" value="{{ form.company }}">
										<label for="address-new[company]" class="form__floating-label">{{
											'customer.addresses.company' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-new[phone]" type="text"
											class="form__field form__field--text {% if form.phone != blank %}is-filled{% endif %}"
											name="address[phone]" value="{{ form.phone }}">
										<label for="address-new[phone]" class="form__floating-label">{{
											'customer.addresses.phone' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-new[address1]" type="text"
											class="form__field form__field--text {% if form.address1 != blank %}is-filled{% endif %}"
											name="address[address1]" value="{{ form.address1 }}">
										<label for="address-new[address1]" class="form__floating-label">{{
											'customer.addresses.address1' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-new[address2]" type="text"
											class="form__field form__field--text {% if form.address2 != blank %}is-filled{% endif %}"
											name="address[address2]" value="{{ form.address2 }}">
										<label for="address-new[address2]" class="form__floating-label">{{
											'customer.addresses.address2' | t }}</label>
									</div>

									<div class="form__input-row">
										<div class="form__input-wrapper form__input-wrapper--labelled">
											<input id="address-new[city]" type="text"
												class="form__field form__field--text {% if form.city != blank %}is-filled{% endif %}"
												name="address[city]" value="{{ form.city }}">
											<label for="address-new[city]" class="form__floating-label">{{
												'customer.addresses.city' | t }}</label>
										</div>

										<div class="form__input-wrapper form__input-wrapper--labelled">
											<input id="address-new[zip]" type="text"
												class="form__field form__field--text {% if form.zip != blank %}is-filled{% endif %}"
												name="address[zip]" value="{{ form.zip }}">
											<label for="address-new[zip]" class="form__floating-label">{{
												'customer.addresses.zip' | t }}</label>
										</div>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<div class="select-wrapper select-wrapper--primary is-filled">
											{%- render 'icon', icon: 'arrow-bottom' -%}
											<select name="address[country]" id="address-new[country]">{{
												all_country_option_tags }}</select>
										</div>

										<label for="address-new[country]" class="form__floating-label">{{
											'customer.addresses.country' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled"
										style="display: none">
										<div class="select-wrapper select-wrapper--primary is-filled">
											{%- render 'icon', icon: 'arrow-bottom' -%}
											<select name="address[province]" id="address-new[province]"></select>
										</div>

										<label for="address-new[province]" class="form__floating-label">{{
											'customer.addresses.province' | t }}</label>
									</div>
									{%- endif -%}

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<div class="checkbox-wrapper">
											<input type="checkbox" class="checkbox" name="address[default]"
												id="address-new[default]" value="0">
											{% render 'icon', icon: 'check' %}
										</div>

										<label for="address-new[default]">{{ 'customer.addresses.set_default' | t
											}}</label>
									</div>

									<button class="form__submit button button--primary button--full" data-scenable="1"
										data-sctype="profile_set" data-submitForm>{{ 'customer.addresses.add_address' |
										t }}</button>
									{%- endform -%}
								</div>
							</div>
						</div>


						<div id="modal-address-{{ customer.default_address.id }}" class="modal" aria-hidden="true">
							<div class="modal__dialog" role="dialog">
								<header class="modal__header">
									<h3 class="modal__title heading h2">{{ 'customer.addresses.edit_address' | t }}</h3>
									<button class="modal__close link" data-action="close-modal"
										title="{{ 'general.accessibility.close' | t | escape }}">
										{%- render 'icon', icon: 'close' -%}
									</button>
								</header>

								<div class="modal__content modal__content--ios-push">
									<p class="modal__description">{{ 'customer.addresses.form_subtitle' | t }}</p>

									{% form 'customer_address', customer.default_address, class: 'form' %}
									{%- if request.locale.iso_code == 'ja' -%}
									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[last_name]" type="text"
											class="form__field form__field--text {% if form.last_name != blank %}is-filled{% endif %}"
											name="address[last_name]" value="{{ form.last_name }}" autofocus>
										<label for="address-{{ address.id }}[last_name]" class="form__floating-label">{{
											'customer.addresses.last_name' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[first_name]" type="text"
											class="form__field form__field--text {% if form.first_name != blank %}is-filled{% endif %}"
											name="address[first_name]" value="{{ form.first_name }}">
										<label for="address-{{ address.id }}[first_name]"
											class="form__floating-label">{{ 'customer.addresses.first_name' | t
											}}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[zip]" type="text"
											class="form__field form__field--text {% if form.zip != blank %}is-filled{% endif %}"
											name="address[zip]" value="{{ form.zip }}">
										<label for="address-{{ address.id }}[zip]" class="form__floating-label">{{
											'customer.addresses.zip' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<div class="select-wrapper select-wrapper--primary is-filled">
											{%- render 'icon', icon: 'arrow-bottom' -%}
											<select name="address[country]" id="address-{{ address.id }}[country]"
												data-default="{{ form.country }}">{{ all_country_option_tags }}</select>
										</div>

										<label for="address-{{ address.id }}[country]" class="form__floating-label">{{
											'customer.addresses.country' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled"
										style="display: none">
										<div class="select-wrapper select-wrapper--primary is-filled">
											{%- render 'icon', icon: 'arrow-bottom' -%}
											<select name="address[province]" id="address-{{ address.id }}[province]"
												data-default="{{ form.province }}"></select>
										</div>

										<label for="address-{{ address.id }}[province]" class="form__floating-label">{{
											'customer.addresses.province' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[city]" type="text"
											class="form__field form__field--text {% if form.city != blank %}is-filled{% endif %}"
											name="address[city]" value="{{ form.city }}">
										<label for="address-{{ address.id }}[city]" class="form__floating-label">{{
											'customer.addresses.city' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[address1]" type="text"
											class="form__field form__field--text {% if form.address1 != blank %}is-filled{% endif %}"
											name="address[address1]" value="{{ form.address1 }}">
										<label for="address-{{ address.id }}[address1]" class="form__floating-label">{{
											'customer.addresses.address1' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[address2]" type="text"
											class="form__field form__field--text {% if form.address2 != blank %}is-filled{% endif %}"
											name="address[address2]" value="{{ form.address2 }}">
										<label for="address-{{ address.id }}[address2]" class="form__floating-label">{{
											'customer.addresses.address2' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[company]" type="text"
											class="form__field form__field--text {% if form.company != blank %}is-filled{% endif %}"
											name="address[company]" value="{{ form.company }}">
										<label for="address-{{ address.id }}[company]" class="form__floating-label">{{
											'customer.addresses.company' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[phone]" type="text"
											class="form__field form__field--text {% if form.phone != blank %}is-filled{% endif %}"
											name="address[phone]" value="{{ form.phone }}">
										<label for="address-{{ address.id }}[phone]" class="form__floating-label">{{
											'customer.addresses.phone' | t }}</label>
									</div>
									{%- else -%}
									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[first_name]" type="text"
											class="form__field form__field--text {% if form.first_name != blank %}is-filled{% endif %}"
											name="address[first_name]" value="{{ form.first_name }}" autofocus>
										<label for="address-{{ address.id }}[first_name]"
											class="form__floating-label">{{ 'customer.addresses.first_name' | t
											}}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[last_name]" type="text"
											class="form__field form__field--text {% if form.last_name != blank %}is-filled{% endif %}"
											name="address[last_name]" value="{{ form.last_name }}">
										<label for="address-{{ address.id }}[last_name]" class="form__floating-label">{{
											'customer.addresses.last_name' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[company]" type="text"
											class="form__field form__field--text {% if form.company != blank %}is-filled{% endif %}"
											name="address[company]" value="{{ form.company }}">
										<label for="address-{{ address.id }}[company]" class="form__floating-label">{{
											'customer.addresses.company' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[phone]" type="text"
											class="form__field form__field--text {% if form.phone != blank %}is-filled{% endif %}"
											name="address[phone]" value="{{ form.phone }}">
										<label for="address-{{ address.id }}[phone]" class="form__floating-label">{{
											'customer.addresses.phone' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[address1]" type="text"
											class="form__field form__field--text {% if form.address1 != blank %}is-filled{% endif %}"
											name="address[address1]" value="{{ form.address1 }}">
										<label for="address-{{ address.id }}[address1]" class="form__floating-label">{{
											'customer.addresses.address1' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[address2]" type="text"
											class="form__field form__field--text {% if form.address2 != blank %}is-filled{% endif %}"
											name="address[address2]" value="{{ form.address2 }}">
										<label for="address-{{ address.id }}[address2]" class="form__floating-label">{{
											'customer.addresses.address2' | t }}</label>
									</div>

									<div class="form__input-row">
										<div class="form__input-wrapper form__input-wrapper--labelled">
											<input id="address-{{ address.id }}[city]" type="text"
												class="form__field form__field--text {% if form.city != blank %}is-filled{% endif %}"
												name="address[city]" value="{{ form.city }}">
											<label for="address-{{ address.id }}[city]" class="form__floating-label">{{
												'customer.addresses.city' | t }}</label>
										</div>

										<div class="form__input-wrapper form__input-wrapper--labelled">
											<input id="address-{{ address.id }}[zip]" type="text"
												class="form__field form__field--text {% if form.zip != blank %}is-filled{% endif %}"
												name="address[zip]" value="{{ form.zip }}">
											<label for="address-{{ address.id }}[zip]" class="form__floating-label">{{
												'customer.addresses.zip' | t }}</label>
										</div>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<div class="select-wrapper select-wrapper--primary is-filled">
											{%- render 'icon', icon: 'arrow-bottom' -%}
											<select name="address[country]" id="address-{{ address.id }}[country]"
												data-default="{{ form.country }}">{{ all_country_option_tags }}</select>
										</div>

										<label for="address-{{ address.id }}[country]" class="form__floating-label">{{
											'customer.addresses.country' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled"
										style="display: none">
										<div class="select-wrapper select-wrapper--primary is-filled">
											{%- render 'icon', icon: 'arrow-bottom' -%}
											<select name="address[province]" id="address-{{ address.id }}[province]"
												data-default="{{ form.province }}"></select>
										</div>

										<label for="address-{{ address.id }}[province]" class="form__floating-label">{{
											'customer.addresses.province' | t }}</label>
									</div>
									{%- endif -%}

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<div class="checkbox-wrapper">
											<input type="checkbox" class="checkbox"
												id="address-{{ customer.default_address.id }}[default]"
												name="address[default]" value="1" checked>
											{% render 'icon', icon: 'check' %}
										</div>

										<label for="address-{{ customer.default_address.id }}[default]">{{
											'customer.addresses.set_default' | t }}</label>
									</div>

									<button class="form__submit button button--primary button--full" data-scenable="1"
										data-sctype="profile_set">{{ 'customer.addresses.edit_address' | t }}</button>
									{% endform %}
								</div>
							</div>
						</div>


						{%- paginate customer.addresses by 9 -%}
						{%- for address in customer.addresses -%}
						{%- if address.id == customer.default_address.id -%}
						{%- continue -%}
						{%- endif -%}

						<div id="modal-address-{{ address.id }}" class="modal" aria-hidden="true">
							<div class="modal__dialog" role="dialog">
								<header class="modal__header">
									<h3 class="modal__title heading h2">{{ 'customer.addresses.edit_address' | t }}</h3>
									<button class="modal__close link" data-action="close-modal"
										title="{{ 'general.accessibility.close' | t | escape }}">
										{%- render 'icon', icon: 'close' -%}
									</button>
								</header>

								<div class="modal__content modal__content--ios-push">
									<p class="modal__description">{{ 'customer.addresses.form_subtitle' | t }}</p>

									{% form 'customer_address', address, class: 'form' %}
									{%- if request.locale.iso_code == 'ja' -%}
									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[last_name]" type="text"
											class="form__field form__field--text {% if form.last_name != blank %}is-filled{% endif %}"
											name="address[last_name]" value="{{ form.last_name }}" autofocus>
										<label for="address-{{ address.id }}[last_name]" class="form__floating-label">{{
											'customer.addresses.last_name' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[first_name]" type="text"
											class="form__field form__field--text {% if form.first_name != blank %}is-filled{% endif %}"
											name="address[first_name]" value="{{ form.first_name }}">
										<label for="address-{{ address.id }}[first_name]"
											class="form__floating-label">{{ 'customer.addresses.first_name' | t
											}}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[zip]" type="text"
											class="form__field form__field--text {% if form.zip != blank %}is-filled{% endif %}"
											name="address[zip]" value="{{ form.zip }}">
										<label for="address-{{ address.id }}[zip]" class="form__floating-label">{{
											'customer.addresses.zip' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<div class="select-wrapper select-wrapper--primary is-filled">
											{%- render 'icon', icon: 'arrow-bottom' -%}
											<select name="address[country]" id="address-{{ address.id }}[country]"
												data-default="{{ form.country }}">{{ all_country_option_tags }}</select>
										</div>

										<label for="address-{{ address.id }}[country]" class="form__floating-label">{{
											'customer.addresses.country' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled"
										style="display: none">
										<div class="select-wrapper select-wrapper--primary is-filled">
											{%- render 'icon', icon: 'arrow-bottom' -%}
											<select name="address[province]" id="address-{{ address.id }}[province]"
												data-default="{{ form.province }}"></select>
										</div>

										<label for="address-{{ address.id }}[province]" class="form__floating-label">{{
											'customer.addresses.province' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[city]" type="text"
											class="form__field form__field--text {% if form.city != blank %}is-filled{% endif %}"
											name="address[city]" value="{{ form.city }}">
										<label for="address-{{ address.id }}[city]" class="form__floating-label">{{
											'customer.addresses.city' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[address1]" type="text"
											class="form__field form__field--text {% if form.address1 != blank %}is-filled{% endif %}"
											name="address[address1]" value="{{ form.address1 }}">
										<label for="address-{{ address.id }}[address1]" class="form__floating-label">{{
											'customer.addresses.address1' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[address2]" type="text"
											class="form__field form__field--text {% if form.address2 != blank %}is-filled{% endif %}"
											name="address[address2]" value="{{ form.address2 }}">
										<label for="address-{{ address.id }}[address2]" class="form__floating-label">{{
											'customer.addresses.address2' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[company]" type="text"
											class="form__field form__field--text {% if form.company != blank %}is-filled{% endif %}"
											name="address[company]" value="{{ form.company }}">
										<label for="address-{{ address.id }}[company]" class="form__floating-label">{{
											'customer.addresses.company' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[phone]" type="text"
											class="form__field form__field--text {% if form.phone != blank %}is-filled{% endif %}"
											name="address[phone]" value="{{ form.phone }}">
										<label for="address-{{ address.id }}[phone]" class="form__floating-label">{{
											'customer.addresses.phone' | t }}</label>
									</div>

									{%- else -%}
									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[first_name]" type="text"
											class="form__field form__field--text {% if form.first_name != blank %}is-filled{% endif %}"
											name="address[first_name]" value="{{ form.first_name }}" autofocus>
										<label for="address-{{ address.id }}[first_name]"
											class="form__floating-label">{{ 'customer.addresses.first_name' | t
											}}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[last_name]" type="text"
											class="form__field form__field--text {% if form.last_name != blank %}is-filled{% endif %}"
											name="address[last_name]" value="{{ form.last_name }}">
										<label for="address-{{ address.id }}[last_name]" class="form__floating-label">{{
											'customer.addresses.last_name' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[company]" type="text"
											class="form__field form__field--text {% if form.company != blank %}is-filled{% endif %}"
											name="address[company]" value="{{ form.company }}">
										<label for="address-{{ address.id }}[company]" class="form__floating-label">{{
											'customer.addresses.company' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[phone]" type="text"
											class="form__field form__field--text {% if form.phone != blank %}is-filled{% endif %}"
											name="address[phone]" value="{{ form.phone }}">
										<label for="address-{{ address.id }}[phone]" class="form__floating-label">{{
											'customer.addresses.phone' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[address1]" type="text"
											class="form__field form__field--text {% if form.address1 != blank %}is-filled{% endif %}"
											name="address[address1]" value="{{ form.address1 }}">
										<label for="address-{{ address.id }}[address1]" class="form__floating-label">{{
											'customer.addresses.address1' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<input id="address-{{ address.id }}[address2]" type="text"
											class="form__field form__field--text {% if form.address2 != blank %}is-filled{% endif %}"
											name="address[address2]" value="{{ form.address2 }}">
										<label for="address-{{ address.id }}[address2]" class="form__floating-label">{{
											'customer.addresses.address2' | t }}</label>
									</div>

									<div class="form__input-row">
										<div class="form__input-wrapper form__input-wrapper--labelled">
											<input id="address-{{ address.id }}[city]" type="text"
												class="form__field form__field--text {% if form.city != blank %}is-filled{% endif %}"
												name="address[city]" value="{{ form.city }}">
											<label for="address-{{ address.id }}[city]" class="form__floating-label">{{
												'customer.addresses.city' | t }}</label>
										</div>

										<div class="form__input-wrapper form__input-wrapper--labelled">
											<input id="address-{{ address.id }}[zip]" type="text"
												class="form__field form__field--text {% if form.zip != blank %}is-filled{% endif %}"
												name="address[zip]" value="{{ form.zip }}">
											<label for="address-{{ address.id }}[zip]" class="form__floating-label">{{
												'customer.addresses.zip' | t }}</label>
										</div>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<div class="select-wrapper select-wrapper--primary is-filled">
											{%- render 'icon', icon: 'arrow-bottom' -%}
											<select name="address[country]" id="address-{{ address.id }}[country]"
												data-default="{{ form.country }}">{{ all_country_option_tags }}</select>
										</div>

										<label for="address-{{ address.id }}[country]" class="form__floating-label">{{
											'customer.addresses.country' | t }}</label>
									</div>

									<div class="form__input-wrapper form__input-wrapper--labelled"
										style="display: none">
										<div class="select-wrapper select-wrapper--primary is-filled">
											{%- render 'icon', icon: 'arrow-bottom' -%}
											<select name="address[province]" id="address-{{ address.id }}[province]"
												data-default="{{ form.province }}"></select>
										</div>

										<label for="address-{{ address.id }}[province]" class="form__floating-label">{{
											'customer.addresses.province' | t }}</label>
									</div>
									{%- endif -%}

									<div class="form__input-wrapper form__input-wrapper--labelled">
										<div class="checkbox-wrapper">
											<input type="checkbox" class="checkbox"
												id="address-{{ address.id }}[default]" name="address[default]" {% if
												address.id==customer.default_address.id %}value="1" checked{% endif %}>
											{% render 'icon', icon: 'check' %}
										</div>

										<label for="address-{{ address.id }}[default]">{{
											'customer.addresses.set_default' | t }}</label>
									</div>

									<button class="form__submit button button--primary button--full" data-scenable="1"
										data-sctype="profile_set">{{ 'customer.addresses.edit_address' | t }}</button>
									{% endform %}
								</div>
							</div>
						</div>
						{%- endfor -%}
						{% assign dm_paginate_by = paginate.page_size %}{%- endpaginate -%}
					</section>

				</div>
				{%- comment -%}----------------------------联系我们-----------------------{%- endcomment -%}
				<div class="my_postsale account_right_content" data-type="accountPage">
					<div class="customers-services">
						<div class="container">
							<h3>{%- render 'icon', icon: 'bi-email' -%}&nbsp;&nbsp;
								<a href="mailto:contactus@hyfol.com" target="_blank" rel="noopener"
									aria-describedby="a11y-new-window-message">contactus@hyfol.com</a>
							</h3>
						</div>
					</div>
				</div>

			</div>
		</div>
	</div>

</section>


{%- capture discount_str -%}
{%- for order in customer.orders -%}
{%- for discount in order.discount_applications -%}
{%- if discount.type =="discount_code" -%}
{{discount.title}},
{%- endif -%}
{%- endfor -%}
{%- endfor -%}
{%- endcapture -%}
{%- assign discounts = discount_str | downcase -%}

<script>
	~function () {

		var Delegate = (function () {

			function Delegate(root) {
				this.listenerMap = [{}, {}];
				if (root) {
					this.root(root);
				}
				this.handle = Delegate.prototype.handle.bind(this); // Cache of event listeners removed during an event cycle
				this._removedListeners = [];
			}

			Delegate.prototype.root = function (root) {
				var listenerMap = this.listenerMap;
				var eventType; // Remove master event listeners

				if (this.rootElement) {
					for (eventType in listenerMap[1]) {
						if (listenerMap[1].hasOwnProperty(eventType)) {
							this.rootElement.removeEventListener(eventType, this.handle, true);
						}
					}
					for (eventType in listenerMap[0]) {
						if (listenerMap[0].hasOwnProperty(eventType)) {
							this.rootElement.removeEventListener(eventType, this.handle, false);
						}
					}
				}

				if (!root || !root.addEventListener) {
					if (this.rootElement) {
						delete this.rootElement;
					}
					return this;
				}

				this.rootElement = root; // Set up master event listeners

				for (eventType in listenerMap[1]) {
					if (listenerMap[1].hasOwnProperty(eventType)) {
						this.rootElement.addEventListener(eventType, this.handle, true);
					}
				}
				for (eventType in listenerMap[0]) {
					if (listenerMap[0].hasOwnProperty(eventType)) {
						this.rootElement.addEventListener(eventType, this.handle, false);
					}
				}

				return this;
			};

			Delegate.prototype.captureForType = function (eventType) {
				return ['blur', 'error', 'focus', 'load', 'resize', 'scroll'].indexOf(eventType) !== -1;
			};

			Delegate.prototype.on = function (eventType, selector, handler, useCapture) {
				var root;
				var listenerMap;
				var matcher;
				var matcherParam;
				if (!eventType) {
					throw new TypeError('Invalid event type: ' + eventType);
				}


				if (typeof selector === 'function') {
					useCapture = handler;
					handler = selector;
					selector = null;
				}

				if (useCapture === undefined) {
					useCapture = this.captureForType(eventType);
				}

				if (typeof handler !== 'function') {
					throw new TypeError('Handler must be a type of Function');
				}

				root = this.rootElement;
				listenerMap = this.listenerMap[useCapture ? 1 : 0];
				if (!listenerMap[eventType]) {
					if (root) {
						root.addEventListener(eventType, this.handle, useCapture);
					}

					listenerMap[eventType] = [];
				}

				if (!selector) {
					matcherParam = null;

					matcher = matchesRoot.bind(this); // Compile a matcher for the given selector
				} else if (/^[a-z]+$/i.test(selector)) {
					matcherParam = selector;
					matcher = matchesTag;
				} else if (/^#[a-z0-9\-_]+$/i.test(selector)) {
					matcherParam = selector.slice(1);
					matcher = matchesId;
				} else {
					matcherParam = selector;
					matcher = Element.prototype.matches;
				} // Add to the list of listeners

				listenerMap[eventType].push({
					selector: selector,
					handler: handler,
					matcher: matcher,
					matcherParam: matcherParam
				});
				return this;
			};


			Delegate.prototype.off = function (eventType, selector, handler, useCapture) {
				var i;
				var listener;
				var listenerMap;
				var listenerList;
				var singleEventType; // Handler can be passed as
				// the second or third argument

				if (typeof selector === 'function') {
					useCapture = handler;
					handler = selector;
					selector = null;
				}

				if (useCapture === undefined) {
					this.off(eventType, selector, handler, true);
					this.off(eventType, selector, handler, false);
					return this;
				}
				listenerMap = this.listenerMap[useCapture ? 1 : 0];

				if (!eventType) {
					for (singleEventType in listenerMap) {
						if (listenerMap.hasOwnProperty(singleEventType)) {
							this.off(singleEventType, selector, handler);
						}
					}
					return this;
				}

				listenerList = listenerMap[eventType];
				if (!listenerList || !listenerList.length) {
					return this;
				}

				for (i = listenerList.length - 1; i >= 0; i--) {
					listener = listenerList[i];
					if ((!selector || selector === listener.selector) && (!handler || handler === listener.handler)) {
						this._removedListeners.push(listener);
						listenerList.splice(i, 1);
					}
				} // All listeners removed


				if (!listenerList.length) {
					delete listenerMap[eventType]; // Remove the main handler
					if (this.rootElement) {
						this.rootElement.removeEventListener(eventType, this.handle, useCapture);
					}
				}

				return this;
			};

			Delegate.prototype.handle = function (event) {
				var i;
				var l;
				var type = event.type;
				var root;
				var phase;
				var listener;
				var returned;
				var listenerList = [];
				var target;
				var eventIgnore = 'ftLabsDelegateIgnore';

				if (event[eventIgnore] === true) {
					return;
				}

				target = event.target; // Hardcode value of Node.TEXT_NODE
				// as not defined in IE8
				if (target.nodeType === 3) {
					target = target.parentNode;
				} // Handle SVG <use> elements in IE

				if (target.correspondingUseElement) {
					target = target.correspondingUseElement;
				}

				root = this.rootElement;
				phase = event.eventPhase || (event.target !== event.currentTarget ? 3 : 2); // eslint-disable-next-line default-case

				switch (phase) {
					case 1:
						//Event.CAPTURING_PHASE:
						listenerList = this.listenerMap[1][type];
						break;

					case 2:
						//Event.AT_TARGET:
						if (this.listenerMap[0] && this.listenerMap[0][type]) {
							listenerList = listenerList.concat(this.listenerMap[0][type]);
						}
						if (this.listenerMap[1] && this.listenerMap[1][type]) {
							listenerList = listenerList.concat(this.listenerMap[1][type]);
						}

						break;

					case 3:
						//Event.BUBBLING_PHASE:
						listenerList = this.listenerMap[0][type];
						break;
				}

				var toFire = []; // Need to continuously check
				// that the specific list is
				// still populated in case one
				// of the callbacks actually
				// causes the list to be destroyed.

				l = listenerList.length;

				while (target && l) {
					for (i = 0; i < l; i++) {
						listener = listenerList[i]; // Bail from this loop if
						// the length changed and
						// no more listeners are
						// defined between i and l.
						if (!listener) {
							break;
						}

						if (target.tagName && ["button", "input", "select", "textarea"].indexOf(target.tagName.toLowerCase()) > -1 && target.hasAttribute("disabled")) {
							// Remove things that have previously fired
							toFire = [];
						} // Check for match and fire
						// the event if there's one
						//
						// TODO:MCG:20120117: Need a way
						// to check if event#stopImmediatePropagation
						// was called. If so, break both loops.
						else if (listener.matcher.call(target, listener.matcherParam, target)) {
							toFire.push([event, target, listener]);
						}
					} // TODO:MCG:20120117: Need a way to
					// check if event#stopPropagation
					// was called. If so, break looping
					// through the DOM. Stop if the
					// delegation root has been reached
					if (target === root) {
						break;
					}

					l = listenerList.length; // Fall back to parentNode since SVG children have no parentElement in IE
					target = target.parentElement || target.parentNode; // Do not traverse up to document root when using parentNode, though
					if (target instanceof HTMLDocument) {
						break;
					}
				}

				var ret;

				for (i = 0; i < toFire.length; i++) {
					// Has it been removed during while the event function was fired
					if (this._removedListeners.indexOf(toFire[i][2]) > -1) {
						continue;
					}

					returned = this.fire.apply(this, toFire[i]); // Stop propagation to subsequent
					// callbacks if the callback returned
					// false

					if (returned === false) {
						toFire[i][0][eventIgnore] = true;
						toFire[i][0].preventDefault();
						ret = false;
						break;
					}
				}

				return ret;
			};

			Delegate.prototype.fire = function (event, target, listener) {
				return listener.handler.call(target, event, target);
			};

			function matchesTag(tagName, element) {
				return tagName.toLowerCase() === element.tagName.toLowerCase();
			}

			function matchesRoot(selector, element) {
				if (this.rootElement === window) {
					return (
						element === document ||
						element === document.documentElement ||
						element === window
					);
				}
				return this.rootElement === element;
			}

			function matchesId(id, element) {
				return id === element.id;
			}

			Delegate.prototype.destroy = function () {
				this.off();
				this.root();
			};
			return Delegate
		})();

		const account = new Delegate(document.querySelector('#account'))

		function ajax(url, data, token, method) {
			const req = new XMLHttpRequest()
			req.open(method, url)
			req.setRequestHeader("Content-type", "application/json");
			req.setRequestHeader("siteValue", "hyfol");
			token && req.setRequestHeader("Authorization", token);
			req.send(data)
			return new Promise((resovle, reject) => {
				req.onreadystatechange = function () {
					if (req.readyState == 4) {
						try {
							var data = JSON.parse(req.responseText)
							resovle(data)
						} catch (error) {
							resovle(req.responseText)
						}
					}
				}
			})

		};

		let baseURL = 'http://api.leandow-technology.com/api/'
		async function getData(url, data, token, method = "POST", type = "json") {
			const headers = { "siteValue": "hyfol" }
			const options = {
				method: method,
				headers
			}
			if (type == 'json') {
				headers['Content-Type'] = 'application/json'
				data && (options.body = JSON.stringify(data))
			}
			token && (headers['Authorization'] = token)
			if (type == 'formData') {
				headers['Content-Type'] = 'application/x-www-form-urlencoded'
			}
			try {
				let response = await fetch(baseURL.concat(url), options);
				return response.json();
			} catch (error) {
				return ajax(baseURL.concat(url), options.body, token, method)
			}
		}

		const dbo = `
		mutation customerUpdate {
		customerUpdate(customer: {firstName:"Jiang",lastName:"Jinshui"}, customerAccessToken: "4a48bd8caa2e6a4805bcfbe555524e65") {
		customer {
			firstName
			lastName
			updatedAt
			}
		customerAccessToken {
			accessToken
		}
		customerUserErrors {
		code
		field
		message
		}
		}}`
		/* fetch('https://hyfol.myshopify.com/api/2022-10/graphql.json',{method:"POST",headers:{
					"Content-Type":"application/graphql","X-Shopify-Storefront-Access-Token":"1d2374d2668239da8efd20c84e848d0d"
				},body:dbo}).then(response=>response.json()).then(data=>console.log(data))
		
			 */


		/* 收藏 */
		var getCollectList = function () {
			var productIds, currentPage, total, sectionId

			function getCollectList(event) {
				var pageSectionId = document.querySelector(".page__sub-header").parentElement.getAttribute("data-section-id")
				const collectList = {
					current: 1,
					customerId: "{{customer.id}}",
					size: 100
				}

				getData("customerCollectionProduct/collectionProductList", collectList)
					.then(res => {

						if (res.data.records.length < 1) {
							document.querySelector('.collect-body').style.display = "block"
							document.querySelector(".wish_loading").style.display = "none"
							return
						}
						productIds = res.data.records
						currentPage = 1
						total = res.data.total
						var ids = res.data.records.map(i => "id:".concat(i.productId))
						ids = ids.join(' OR ')
						fetch(`/search?q=${ids}&type=product`)
							.then((res) => {
								res.text().then((content) => {
									document.querySelector('.collect-body').style.display = "none"
									document.querySelector(".wish_loading").style.display = "none"
									const dom = document.createElement('div')
									dom.innerHTML = content
									let heading = dom.querySelector(".collection__dynamic-part .collection__toolbar")
									heading && heading.remove()
									document.querySelector('.collect').appendChild(dom.querySelector(".collection__dynamic-part"))
									document.querySelector('.collect').appendChild(dom.querySelector('[data-section-type="collection"] .modal'))
									sectionId = dom.querySelector('[data-section-type="collection"]').getAttribute('data-section-id')
								})
							})
					})
			}

			async function nextCollectList(event, target) {
				event.preventDefault()
				window.scroll(0, 0)

				var currentIds, content, url
				var nextPage = target.getAttribute('data-page')
				var productList = document.querySelector(".product-list--collection")
				document.querySelector(".wish_loading").style.display = "flex"
				productList.style.display = "none"

				if (sectionId && total <= productIds.length) {
					currentIds = productIds
					url = '/search?section_id='.concat(sectionId, "&page=", nextPage, '&')
				} else {
					const collectList = {
						current: nextPage,
						customerId: "{{customer.id}}",
						size: 24
					}
					var response = await getData("customerCollectionProduct/collectionProductList", collectList)
					currentIds = response.data.records
					url = "/search?"
				}

				var ids = currentIds.map(i => "id:".concat(i.productId))
				ids = ids.join(' OR ')
				content = await fetch(url.concat(`q=${ids}&type=product`)).then(res => res.text())
				document.querySelector(".wish_loading").style.display = "none"
				const dom = document.createElement('div')
				dom.innerHTML = content
				let heading = dom.querySelector(".collection__dynamic-part .collection__toolbar")
				heading && heading.remove()
				var productContaner = document.querySelector('.collect ')
				var oldProductList = document.querySelector('.collect .collection__dynamic-part')
				var newProductList = dom.querySelector(".collection__dynamic-part")
				productContaner && productContaner.replaceChild(newProductList, oldProductList)

			}

			if ("{{ customer.id}}") {
				getCollectList()
				account.on('click', '.pagination__nav-item.link,.pagination__next,.pagination__prev', nextCollectList)
				account.on('click', '.collect_btn', (event, target) => {
					event.preventDefault()
					var productTtem = target.closest(".product-item")
					productTtem && productTtem.remove();
				})
			}

		}();

		function getFormData(form) {
			var hash = [];
			for (var i = 0, len = form.elements.length; i < len; i++) {
				var formElement = form.elements[i];
				if (formElement.name === '' || formElement.disabled) {
					continue;
				}
				if (formElement.name && !formElement.disabled && (formElement.checked || /select|textarea/i.test(formElement.nodeName) || /hidden|text|search|tel|url|email|password|datetime|date|month|week|time|datetime-local|number|range|color/i.test(formElement.type))) {
					hash.push(formElement.name + '=' + formElement.value)
				}
			}
			return hash.join('&');
		}

		/* 个人中心 */
		~function () {
			//**  ACCPOUNT CUSTOMERS  ***//        
			function bindEvent(container, target, call) {
				let content = document.querySelector(container)
				content.addEventListener('click', (e) => {
					if (!e.target.classList.contains(target)) return
					e.preventDefault()
					call && call(e, content, target)
				})

			}

			let codeStr = "{{discounts}}"
			codeStr = codeStr && codeStr.split(',') || []

			//** 	个人中心   **//
			async function getToken() {
				let token
				const customerJson = {
					email: "{{ customer.email}}",
					id: "{{ customer.id }}"
				}

				let url = baseURL.concat('customerAccount/login')
				const response = await fetch(url, {
					method: "POST",
					body: JSON.stringify(customerJson),
					headers: { 'content-type': 'application/json', 'siteValue': 'hyfol' }
				})
				try {
					if (response.status !== 200) return ''
					const data = await response.json()
					if (data.code !== 200) return ''
					// console.log(`-----tonken-----`, data);
					token = token || data.data
					const authorToken = {
						token: token,
						date: Date.now() + 300000
					}

				} catch (error) {
					token = ''
				}
				return token
			}

			async function getCoupons(token) {//获取自己的优惠券
				if (token) {
					const { data, code, success } = await getData('customerAccount/getShopifyMyPriceRules', '', token, "GET", 'formData')
					// console.log(data)
					if (code == 200 && data && data.length && success) {
						const couponView = document.querySelector('.my-account .my-coupons__list')
						const unusedCoupons = document.querySelector('.unused__coupons .my-coupons__list')
						const expiredCoupons = document.querySelector('.expired__coupons .my-coupons__list')
						const couponList = []
						const expireList = []
						const reg = /^[$0-9.]+%?/
						data.forEach((item, i) => {
							let C = ''
							const codeStr = item.summary.replace(/^[0-9$.]+%?( off)?/, (a, b, c, d) => {
								C = a.split(' ').shift() || "0%"
								return `<span style=" font-size: 1rem; font-weight: 600;">${a}</span>`
							})
							const coupon = `<div class="my-coupons__item" data-index="${item.id}">
						<div class="codeLeft">
							<ul class="couponDos dostLeft">
								<li class="couponDost"></li><li class="couponDost"></li>
								<li class="couponDost"></li><li class="couponDost"></li>
								<li class="couponDost"></li><li class="couponDost"></li>
							</ul>
							<ul class="couponDos dostRight">
								<li class="couponDost"></li><li class="couponDost"></li>
								<li class="couponDost"></li><li class="couponDost"></li>
								<li class="couponDost"></li><li class="couponDost"></li>
							</ul>
							<p style="font-weight: 500;">${codeStr}</p>
							<p style="font-weight: 600;line-height:1;">Code: <span class="coupon_code">${item.title}</span></p>
							<ul class="coupons-date" style=" font-weight: 500;"><li>minimum spend to use:none</li><li>${item.ends_at}</li></ul>
						</div>
						<div class="codeRight">
							<span class="d-block" style="text-align: center;font-family: emoji;margin-top: 10px;">coupon</span>
							<span class="d-flex space-between codeSave">save <span class="d-inline-block  codeAmount ">${C}<span
							class="d-inline-block poa alert--center" style=" writing-mode: tb-rl; font-size: 1rem;top: 0; bottom: 0;margin: auto 0;right: 0;">off</span></span></span>
						</div>
					</div>`
							if (codeStr.indexOf(item.title.toLocaleLowerCase()) != -1 || item.status != "active") {
								expireList.push(coupon)
							} else { couponList.push(coupon) }
						})
						couponView && couponList.length && (couponView.innerHTML = couponList.join('')) && couponView.classList.remove("my-coupons_empty")
						unusedCoupons && couponList.length && (unusedCoupons.innerHTML = couponList.join('')) && unusedCoupons.classList.remove("my-coupons_empty")
						expireList && expireList.length && (expiredCoupons.innerHTML = expireList.join('')) && expiredCoupons.classList.remove("my-coupons_empty")

					}
				} else console.info(token);
			}

			async function getPoint(token) {//获取积分记录
				const body = {
					pageNum: 1,
					pageSize: 10,
					type: "all, earned, pointAmount, expired"
				}
				const data = await getData('customerAccount/getPointInfo', body, token)
				const { pointsExpiredSoon, profileDetalls, totalPoints } = data.data
				const templateExp = []
				const templateEarned = []
				const totalContainer = document.querySelector('.profile_total')
				const expireContainer = document.querySelector('.profile_expire')
				const allProfile = document.querySelector('.profile-all tbody')
				const expiredInfo = document.querySelector('.profile-expired tbody')
				const earnedInfo = document.querySelector('.profile-earned tbody')
				totalContainer.innerHTML = totalPoints || 0;
				expireContainer.innerHTML = pointsExpiredSoon || 0;
				const templateAll = profileDetalls.records.map(item => {
					let tempStr
					if (item.type == 'cost') {
						tempStr = `<tr>
							<td>${item.createTime}</td>
							<td>${item.pointType}</td>
							<td class="profile-amount">${item.pointAmount}</td>
							<td>${item.expireTime}</td>
						</tr>`
						templateExp.push(tempStr)
					} else if (item.type == 'earned') {
						tempStr = `<tr>
							<td>${item.createTime}</td>
							<td>${item.pointType}</td>
							<td class="profile-amount">+ ${item.pointAmount}</td>
							<td>${item.expireTime}</td>
						</tr>`
						templateEarned.push(tempStr)
					} else {
						tempStr = `<tr>
							<td>${item.createTime}</td>
							<td>${item.pointType}</td>
							<td class="profile-amount">${item.pointAmount}</td>
							<td>${item.expireTime}</td>
						</tr>`
					}

					return tempStr
				})
				allProfile.innerHTML = templateAll.join('')
				expiredInfo.innerHTML = templateExp.join('')
				earnedInfo.innerHTML = templateEarned.join('')

			}

			async function getVipExplain(token) {//规则
				const response = await getData('customerAccount/getVipDesc', '', token, "GET", "formData")
				// console.log('getVip-responsse', response)
			}

			async function getCustomer(token) {

				const data = await getData('customerAccount/selectCustomer', '', token)

				if (!data || data.code !== 200) {
					return getCustomer()
				}
				const { siteType, totalPoint, totalSpent, vipType } = data.data
				const pointContainer = document.querySelector('.vip-integral')
				const userVip = document.querySelector('.vip-user__grade')
				totalPoint && (pointContainer.innerHTML = totalPoint)
				userVip && (userVip.innerHTML = vipType || "copper")
				// console.log('getCustomer', data)
			}

			async function deductPoint(token) {
				const pointData = { expireTime: new Date(Date.now() + 2592000000).toLocaleString(), pointAmount: 10000, pointType: "Emaill Verification" }
				const data = await getData('customerAccount/deductPoint', pointData, token)
				// console.log('deductPoint', data)
			}

			async function fn() {
				const token = await getToken()
				// addPoint(token)
				// addPoint()
				getCustomer(token)
				// getMyCoupon()
				getCoupons(token)
				getPoint(token)
			} fn();

			class DetailsMenu extends HTMLElement {
				constructor() {
					super();
					this.addEventListener('click', (e) => {
						e.preventDefault()
						let target = e.target
						if (!['summary'].includes(target.tagName.toLowerCase()) || target.getAttribute('aria-expanded') === 'true') return
						this.onAcativ(target)

					})
				}

				onAcativ(target) {
					this.close(target)
					const activePage = this.querySelector(`.page__item[data-index="${target.dataset.index}"]`)
					activePage.setAttribute('aria-hidden', false)
					target.setAttribute('aria-expanded', true)

				}

				close() {
					const oldActiveNav = this.querySelector('[aria-expanded="true"]')
					const oldActivePage = this.querySelector('[aria-hidden="false"]')
					oldActivePage.setAttribute('aria-hidden', true)
					oldActiveNav.setAttribute('aria-expanded', false);
				}
			}
			customElements.define('details-menu', DetailsMenu);

			const rules = document.querySelector('.vip-rules')
			const user = document.querySelector('.my-account')
			bindEvent('.my_overview', 'vip-rules__link', () => {
				user.style.display = "none"
				rules.style.display = 'block'
				window.scroll(0, 0)
			})
			bindEvent('.my_overview', 'close-rule__page', () => {
				rules.style.display = 'none'
				user.style.display = "block"
			})
			//  END  
		}()

		function createClass(classObj, protoList) {
			var pro = classObj.prototype
			for (var i = 0; i < protoList.length; i++) {
				var descriptor = protoList[i]
				descriptor.enumerable = descriptor.enumerable || false;
				descriptor.configurable = true;
				if ("value" in descriptor) descriptor.writable = true;
				pro && Object.defineProperty(pro, descriptor.key, descriptor)
			}
			return classObj
		}

		var AccountSetion = (function () {
			function Account(element) {
				this.element = element
				this.accountGate = new Delegate(this.element)
				this.navigation = this.element.querySelectorAll('.card__linklist-item')
				this.mobileOrderNavs = this.element.querySelectorAll('[data-type="orders-list"]')
				this.pcOrderNavs = this.element.querySelectorAll('.orders-nav__item')
				this.accountPages = this.element.querySelectorAll('[data-type="accountPage"]')
				this.init()
				this.eventListener()
			}
			createClass(Account, [{
				key: "init",
				value: function () {
					if (window.location.hash) {
						this.pageSwitch()
					} else {
						this.element.querySelectorAll('[data-right="my_overview"]').forEach(i => {
							i.className = "card__linklist-item link text--stronger "
						})
						document.querySelector(".my_overview").style.display = "block"
					}
					this.renderMobOrder()
					this.changeMobileOrderView()
				}
			}, {
				key: "eventListener",
				value: function () {
					this.accountGate.on('click', '[data-type="orders-list"]', this.changeMobOrderNav.bind(this))//mobile order list
					this.accountGate.on('click', '.order-preview__item', this.orderQuickView.bind(this))//pc overview list
					this.accountGate.on('click', '[data-action="left-nav"]', this.changeNavigate.bind(this))//pc left navlist
					this.accountGate.on('click', '.form__submit[data-submitForm]', this.addAddresses.bind(this))//add
					this.accountGate.on('click', '[data-action="deleteAddresses"]', this.romoveAddresses.bind(this)) //remove
				}
			}, {
				key: "pageSwitch",
				value: function (ev, target) {
					var nowNav = window.location.hash.split("#")[1].replace(/\%20/g, " ")
					var hashValue = nowNav.split('+')[0]
					var navigations = this.navigation
					for (let index = 0; index < navigations.length; index++) {
						var element = navigations[index];
						if (element.getAttribute('aria-label') == nowNav) {
							document.querySelector('.breadcrumb__link[aria-current="page"]').innerHTML = nowNav
							element.className = " card__linklist-item link text--stronger "
							var enode = element.getAttribute("data-right")
							document.querySelector("." + enode).style.display = "block"
						} else {
							element.className = " card__linklist-item "
						}
					}
					if (hashValue == 'Orders') {
						document.querySelectorAll('[aria-label="My Orders"]').forEach(i => {
							i.className = " card__linklist-item link text--stronger "
						})
						document.querySelector('.my_orders').style.display = "block"
					}
					this.changePcOrderView()
					window.scroll(0, 0)
				}
			}, {
				key: "changeMobOrderNav",
				value: function (ev, target) {
					var navName = target.getAttribute('aria-label')
					var url = window.location.hash.split("+")[1]
					if (url == navName) return;
					window.location.hash = "Orders+" + navName
					this.changeMobileOrderView()
					this.renderMobOrder()
				}
			}, {
				key: "loading",
				value: function (bool) {
					let loading = document.querySelector('#loading')
					let body_me = document.querySelector('#body_me')
					let nullbox = document.querySelector('#order_null')
					if (bool) {
						loading.style.display = 'block';
						body_me.innerHTML = ''
						nullbox.style.display = 'none'
					} else {
						loading.style.display = 'none';
					}
				}
			}, {
				key: "romoveAddresses",
				value: function (ev, target) {
					if (!target.dataset.target) return
					if (confirm("Are you sure you wish to delete this address?")) {
						fetch(target.dataset.target, { method: "POST", headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: '_method=delete' }).then(response => {
							location.reload()
						})
					}
				}
			}, {
				key: "addAddresses",
				value: function (ev, target) {
					ev.preventDefault()
					var form = ev.target.closest('form')
					var formData = getFormData(form)
					fetch('/account/addresses', {
						method: "POST",
						headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
						body: formData
					}).then(response => {
						location.reload()
					})
				}
			}, {
				key: "orderQuickView",
				value: function changeNav(ev, target) {
					var navName = target.getAttribute('data-nav-type')
					var navigations = this.navigation
					window.location.hash = "Orders+" + navName
					var url = navName.toLowerCase()
					var list = this.accountPages
					for (let i = 0; i < list.length; i++) {
						list[i].style.display = "none"
					}
					window.scroll(0, 0)

					if (navName === 'Post-sale') {
						for (let i = 0; i < navigations.length; i++) {
							var el = navigations[i];
							if (el.getAttribute("data-right") == "my_postsale") {
								el.className = "card__linklist-item link text--stronger "
							} else {
								el.className = "card__linklist-item "
							}
						}
						document.querySelector(".my_postsale").style.display = "block"
						return
					}

					for (let i = 0; i < navigations.length; i++) {
						var el = navigations[i];
						if (el.getAttribute("data-right") == "my_orders") {
							el.className = "card__linklist-item link text--stronger "
						} else {
							el.className = "card__linklist-item "
						}
					}

					document.querySelector(".my_orders").style.display = "block"
					this.pcOrderNavs.forEach((item) => {
						item.setAttribute("data-action", false)
					})

					document.querySelector(".order-" + url).setAttribute("data-action", true)
					var index = document.querySelector(".order-" + url).getAttribute("data-index")
					document.querySelectorAll('.order-item__card').forEach((item) => {
						if (item.getAttribute("data-index") == index) {
							item.setAttribute("aria-hidden", false)
						} else {
							item.setAttribute("aria-hidden", true)
						}
					})
				}
			}, {
				key: "orderNavChange",
				value: function (ev, target) {
					document.querySelector(".my_orders").style.display = "block"
					this.pcOrderNavs.forEach((item) => {
						item.setAttribute("data-action", false)
					})
				}
			}, {
				key: "changePcOrderView",
				value: function () {
					if (!location.hash) return;
					var hash = location.hash.replace('#', '')
					var hashName = hash.split("+")[0]
					var hashKey = hash.replace('%20', ' ')
					if (hashName != "Orders") return;
					var hashValue = window.location.hash.split("+")[1]
					var orderViews = this.element.querySelectorAll('.order-item__card')
					var index
					this.pcOrderNavs.forEach((item, i) => {
						if (item.getAttribute('aria-label') == hashValue) {
							item.setAttribute('data-action', true)
							index = item.getAttribute('data-index')
						} else {
							item.setAttribute('data-action', false)

						}
					})
					orderViews.forEach(i => {
						if (i.getAttribute('data-index') == index) {
							i.setAttribute('aria-hidden', false)
						} else {
							i.setAttribute('aria-hidden', true)
						}
					})
				}
			}, {
				key: "changeMobileOrderView",
				value: function (ev, target) {
					if (!location.hash) return;
					var hashName = window.location.hash.replace('#', '').split("+")[0]
					if (hashName != "Orders") return;
					var hashValue = window.location.hash.split("+")[1]
					this.mobileOrderNavs.forEach(i => {
						if (i.getAttribute('aria-label') == hashValue) {
							i.classList.add('current')
						} else {
							i.classList.remove('current')
						}
					})

				}
			}, {
				key: "changeNavigate",
				value: function (ev, target) {
					var searchValue = target.getAttribute('aria-label')
					window.location.hash = searchValue
					var list = this.accountPages
					for (var i = 0; i < list.length; i++) {
						list[i].style.display = "none"
					}
					this.pageSwitch()
				}
			}, {
				key: "renderMobOrder",
				value: function () {
					this.loading(true)
					let body_me = document.querySelector('#body_me')
					let nullbox = document.querySelector('#order_null')
					nullbox.style.display = 'none'
					var url
					var reg = /Orders+[\d\D]*/
					if (reg.test(location.hash)) {
						var hash = location.hash.split('+')[1].toLowerCase()
						url = '?section_id=my-orders-' + hash;
					} else {
						url = '?section_id=my-orders-all';
					}
					fetch(url, {
						credentials: 'same-origin',
						method: "GET"
					}).then(response => response.text().then(content => {
						body_me.innerHTML = content
						var fag = body_me.querySelectorAll('.card .order-box')
						if (!fag.length) {
							nullbox.style.display = 'block'
							body_me.style.display = 'none'
						} else {
							nullbox.style.display = 'none'
							body_me.style.display = 'block'
						}
						this.loading(false);
					}))
				}

			}])

			return Account
		})();
		var accountS = new AccountSetion(document.getElementById("account"))


		function getSectionInnerHTML(html, selector = '.shopify-section') {
			return new DOMParser()
				.parseFromString(html, 'text/html')
				.querySelector(selector).innerHTML;
		}
		const orderBox = document.querySelector('.order-view__box')
		orderBox.addEventListener('click', e => {
			const target = e.target
			if (target.dataset.action !== 'false' && target.parentElement.dataset.action !== 'false') return
			const nav = target.dataset.action ? target : target.parentElement
			const preNav = orderBox.querySelector('.orders-nav__item[data-action="true"]')
			const preView = document.querySelector('.order-item__card[aria-hidden="false"]')
			const openOrederView = document.querySelector(`.order-item__card[data-index="${nav.dataset.index}"]`)
			preNav.dataset.action = false
			nav.dataset.action = true
			preView.setAttribute('aria-hidden', true)
			openOrederView.setAttribute("aria-hidden", false)
			let hashUrl = target.textContent.replace(/\s*|[\r\n]/g, '')
			window.location.hash = "Orders+" + hashUrl
		})

		document.querySelector('.order__render-view').addEventListener('click', e => {
			if (e.target.classList.contains('title-info-name')) {
				const target = e.target
				const orderUrl = target.dataset.url

				fetch(orderUrl, {
					credentials: 'same-origin',
					method: 'GET'
				}).then(response => response.text())
					.then(html => {
						document.querySelector('.card.my_orders').innerHTML = getSectionInnerHTML(html, '.order-summary')
						window.scroll(0, 0)
					})
			}
		})


	}()

</script>
{%- comment -%}
{
"value":"account-text",
"label":"文本"
},
{
"value":"account-my",
"label":"用户"
},
{
"value":"account-logout",
"label":"退出"
},
{
"value":"account-palay",
"label":"支付"
},
{
"value":"account-renz",
"label":"认证"
},

{
"value":"account-setting",
"label":"设置"
},



{%- endcomment -%}
{% schema %}
{
"name": "个人中心左侧导航",
"settings": [{
"type":"image_picker",
"id":"points_rule",
"label":"积分兑换规则图"
}]
}
{% endschema %}